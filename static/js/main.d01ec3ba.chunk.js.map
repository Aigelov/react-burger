{"version":3,"sources":["components/profile-header/profile-header.module.css","components/menu/menu.module.css","components/main/main.module.css","components/burger-ingredients-tabs-content/burger-ingredients-tabs-content.module.css","components/burger-ingredients-card/burger-ingredients-card.module.css","components/burger-ingredients-tabs/burger-ingredients-tabs.module.css","components/ingredient-details-item/ingredient-details-item.module.css","components/burger-ingredients/burger-ingredients.module.css","components/modal-overlay/modal-overlay.module.css","components/profile-tabs/profile-tabs.module.css","pages/profile-orders/profile-orders.module.css","pages/profile-order/profile-order.module.css","components/performed-orders/performed-orders.module.css","pages/feed/feed.module.css","pages/ingredient/ingredient.module.css","services/middleware/socket-user-middleware.ts","services/middleware/socket-middleware.ts","reportWebVitals.ts","alert.ts","services/hooks/hooks.ts","services/helpers-cookie.ts","services/services/auth.ts","services/action-types/ws-action-types.ts","services/action-types/ws-user-action-types.ts","services/action-types/auth-action-types.ts","services/action-types/burger-action-types.ts","services/action-types/order-action-types.ts","services/action-types/profile-action-types.ts","services/actions/auth.ts","services/services/ingredients.ts","services/actions/burger.ts","services/services/order.ts","services/actions/order.ts","services/services/profile.ts","services/actions/profile.ts","components/header-item/header-item.tsx","components/profile-header/profile-header.tsx","components/menu/routes.tsx","components/menu/menu.tsx","components/app-header/app-header.tsx","services/routes/protected-route.tsx","components/main/main.tsx","components/burger-ingredients-card-item/burger-ingredients-card-item.tsx","components/burger-ingredients-card/burger-ingredients-card.tsx","components/burger-ingredients-tabs-content/burger-ingredients-tabs-content.tsx","components/burger-ingredients-tabs/burger-ingredients-tabs.tsx","components/ingredient-details-item/ingredient-details-item.tsx","components/ingredient-details/ingredient-details.tsx","components/spinner/spinner.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/burger-ingredients/burger-ingredients.tsx","components/burger-constructor-item/burger-constructor-item.tsx","components/burger-constructor-bun/burger-constructor-bun.tsx","components/burger-constructor/construct-burger.ts","images/done.svg","components/order-details/order-details.tsx","components/order-button/order-button.tsx","services/actions/ws-actions.ts","components/total-price/total-price.tsx","components/burger-constructor/burger-constructor.tsx","pages/burger-provider/burger-provider.tsx","components/profile-tabs/profile-tabs.tsx","utils/generateUniqueKey.ts","services/helpers.ts","pages/profile/profile.tsx","components/_constants/status-types.ts","components/feed-details/feed-details.tsx","components/feed-card/feed-card.tsx","components/card/card.tsx","components/card-list/card-list.tsx","pages/profile-orders/profile-orders.tsx","pages/profile-order/profile-order.tsx","pages/login/login.tsx","services/validate/validate.ts","pages/register/register.tsx","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","components/performed-orders/performed-orders.tsx","utils/number-with-spaces.ts","components/order-status-list/order-status-list.tsx","pages/feeds/feeds.tsx","pages/feed/feed.tsx","pages/ingredient/ingredient.tsx","pages/no-match/no-match.tsx","services/routes/routes.tsx","components/app.tsx","services/hooks/check-previous-login.ts","services/reducers/profile.ts","services/reducers/burger.ts","services/reducers/auth.ts","services/reducers/ws-reducer.ts","services/reducers/ws-user-reducer.ts","services/reducers/order.ts","services/reducers/index.ts","store.ts","index.tsx","components/feed-details/feed-details.module.css","components/card/card.module.css","pages/login/login.module.css","components/header-item/header-item.module.css","components/burger-constructor/burger-constructor.module.css","pages/register/register.module.css","pages/forgot-password/forgot-password.module.css","pages/reset-password/reset-password.module.css","pages/no-match/no-match.module.css","components/app-header/app-header.module.css","components/burger-ingredients-card-item/burger-ingredients-card-item.module.css","components/modal/modal.module.css","components/burger-constructor-item/burger-constructor-item.module.css","components/order-details/order-details.module.css","components/order-status-list/order-status-list.module.css","components/ingredient-details/ingredient-details.module.css","components/burger-constructor-bun/burger-constructor-bun.module.css","pages/profile/profile.module.css","components/card-list/card-list.module.css","components/feed-card/feed-card.module.css","pages/feeds/feeds.module.css"],"names":["module","exports","wsUserUrl","wsUserActions","wsUrl","wsActions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","alertOptions","offset","position","positions","MIDDLE","timeout","transition","transitions","FADE","useSelector","selectorHook","useDispatch","dispatchHook","setCookie","name","value","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","login","form","a","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","data","success","removeTokens","setTokens","Error","message","logout","token","updateToken","register","forgotPassword","email","resetPassword","accessToken","refreshToken","split","localStorage","setItem","removeItem","authService","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_ORDER","WS_SEND_ORDER","WS_USER_CONNECTION_START","WS_USER_CONNECTION_SUCCESS","WS_USER_CONNECTION_ERROR","WS_USER_CONNECTION_CLOSED","WS_USER_GET_ORDER","WS_USER_SEND_ORDER","SET_AUTHORIZATION","CLEAR_AUTHORIZATION","SET_EMAIL_RESET","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","UPDATE_TOKEN_REQUEST","UPDATE_TOKEN_SUCCESS","UPDATE_TOKEN_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILURE","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILURE","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILURE","ADD_INGREDIENT","REMOVE_INGREDIENT","UPDATE_INGREDIENTS","CLEAR_SELECTED_INGREDIENTS","INCREASE_COUNT","DECREASE_COUNT","CHECKOUT_ORDER_REQUEST","CHECKOUT_ORDER_SUCCESS","CHECKOUT_ORDER_FAILURE","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE","authActions","dispatch","type","emailReset","error","findAllIngredients","Promise","resolve","reject","Authorization","res","ok","getIngredients","getItem","checkoutOrderFetch","ingredientIDs","ingredients","checkoutOrder","getUser","updateUser","profileService","profileActions","HeaderItem","svgIcon","text","path","pathname","useHistory","location","headerItemStyle","HeaderItemStyles","menuItem","headerItemText","headerNavLinkStyle","link","className","to","activeClassName","active","ProfileHeader","ProfileStyles","profile","routes","id","padding","Menu","MenuStyles","menu","map","item","AppHeader","headerStyle","headerStyles","header","wrapper","logo","ProtectedRoute","children","rest","isAuthorized","auth","useEffect","render","state","from","Main","mainStyle","MainStyles","main","BurgerIngredientsCardItem","ingredient","ingredientClickHandler","_id","price","image","count","useDrag","collect","monitor","isDrag","isDragging","dragRef","CardItemStyles","card","onClick","ref","title","size","src","alt","width","priceCurrency","currencyIcon","BurgerIngredientsCard","tabRef","CardStyles","BurgerIngredientsTabsContent","bunRef","sauceRef","mainRef","scrollContainerRef","handleScroll","burger","tabsContent","filter","BurgerIngredientsTabsContentStyles","tabContent","onScroll","BurgerIngredientsTabs","currentTab","tabClickHandler","tabStyle","BurgerIngredientsTabsStyles","tabs","IngredientDetailsItem","info","IngredientDetailsItemStyles","ingredientDetailsItem","IngredientDetails","image_large","details","calories","proteins","fat","carbohydrates","IngredientStyles","ingredientDetails","style","display","helpfulness","detail","Spinner","height","margin","textAlign","color","ModalOverlay","ModalOverlayStyles","modalOverlay","modalRoot","getElementById","Modal","onClose","modalRef","useRef","keyDownHandler","useCallback","keyCode","clickHandler","target","current","contains","addEventListener","removeEventListener","createPortal","ModalStyles","modal","close","BurgerIngredients","history","useLocation","useState","visible","setVisible","setIngredient","setCurrentTab","loading","BurgerIngredientsStyles","burgerIngredients","length","tab","scrollIntoView","behavior","ingredientId","selectedIngredient","reduce","acc","cur","push","background","scrollContainerPosition","getBoundingClientRect","top","firstHeaderPosition","secondHeaderPosition","thirdHeaderPosition","firstDiff","Math","abs","secondDiff","thirdDiff","BurgerConstructorItem","memo","findIngredient","moveIngredient","selectedIngredients","handleRemove","curr","removeIngredient","decreaseCount","uniqueID","originalIndex","index","end","droppedId","didDrop","useDrop","accept","canDrop","hover","draggedId","overIndex","dropRef","opacity","node","drag","ingredientEl","handleClose","BurgerConstructorBun","props","newText","constructBurgerBun","burgerIngredient","isLocked","thumbnail","constructBurger","OrderDetails","order","orderReducer","orderIdStyle","OrderAcceptedStyles","orderId","textGreyStyle","textGrey","orderAccepted","number","Done","OrderButton","payload","wsSendMessage","orderNumber","checkoutHandler","TotalPrice","totalPrice","total","BurgerConstructor","onDropHandler","isHoverConstructor","isOver","drop","dropInConstructor","indexOf","atIndex","updateIngredients","isHover","dropTarget","bunIngredient","find","borderColorConstructor","borderColor","IngredientsStyles","ingredientsMiddle","middle","bottom","BurgerProviderPage","alert","useAlert","action","DndProvider","backend","HTML5Backend","draggedItem","show","addIngredient","increaseCount","ProfileTabs","setCurrent","ProfileTabsStyles","onTabClick","generateKey","key","milliseconds","Date","getTime","newIngredient","newIngredients","concat","counter","initialValues","password","initialInputErrors","ProfilePage","values","setValues","inputErrors","setInputErrors","user","prevValues","onChange","onSubmit","e","preventDefault","params","newParams","removeEmptyParams","placeholder","errorText","flexDirection","STATUS_TYPES","done","pending","created","FeedDetails","currentOrder","ordersAll","orders","Number","amountCount","orderIngredients","includes","amount","FeedDetailsStyles","feedDetails","status","feedOrderList","feedOrder","maxWidth","format","createdAt","FeedCard","ingredientsCount","showMore","FeedCardStyles","cardIngredient","zIndex","hasMore","Card","cardClickHandler","showOrderStatus","setShowOrderStatus","cards","cardHeader","cardInfo","cardIngredients","CardList","CardListStyles","cardsWrapper","ProfileOrders","setOrderId","userOrders","wsUserReducer","ProfileOrdersStyles","profileOrders","String","ProfileOrder","useParams","wsReducer","ProfileOrderStyles","LoginPage","flexRow","LoginStyles","errorDiv","trim","validateFields","fields","isValid","forEach","RegisterPage","RegisterStyles","ForgotPasswordPage","ForgotPasswordStyles","code","ResetPasswordPage","ResetPasswordStyles","PerformedOrders","num","PerformedOrdersStyles","textShadow","toString","OrderStatusList","totalToday","readyOrders","pendingOrders","OrderStatusListStyles","ordersStatusList","ordersReadyAndInProgress","ordersReady","Feeds","FeedsStyles","feedsWrapper","feeds","Feed","FeedStyles","feed","Ingredient","foundIngredient","NoMatch","NoMatchStyles","noMatch","notFound","Routes","exact","App","useCheckPreviousLogin","profileReducerInitialState","burgerReducerInitialState","ingredientsRequest","ingredientsFailed","authReducerInitialState","wsReducerInitialState","wsConnected","wsUserReducerInitialState","wsUserConnected","orderReducerInitialState","rootReducer","combineReducers","splice","timestamp","wsInit","wsSendOrder","onOpen","onError","onOrder","wsUserInit","wsUserSendOrder","userOnOpen","userOnClose","userOnError","userOnOrder","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMiddleware","store","socket","next","getState","WebSocket","onopen","event","onerror","onmessage","parsedData","parse","restParsedData","onclose","send","initialState","createStore","initStore","ReactDOM","StrictMode","template","AlertTemplate"],"mappings":"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","file":"static/js/main.d01ec3ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile-header_profile__354am\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"menu_menu__2lX_i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__2W-l3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabContent\":\"burger-ingredients-tabs-content_tabContent__2GXi6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"burger-ingredients-card_card__2yP4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"burger-ingredients-tabs_tabs__2TqWF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientDetailsItem\":\"ingredient-details-item_ingredientDetailsItem__2y40c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerIngredients\":\"burger-ingredients_burgerIngredients__2i6ZI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"modal-overlay_modalOverlay__tfXD-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"profile-tabs_tabs__3XWwc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileOrders\":\"profile-orders_profileOrders__m8HgN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"profile-order_order__1Ikso\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textShadow\":\"performed-orders_textShadow__2IZ6H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"feed_feed__1Jw3v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ingredient_ingredient__10O0J\"};","import { ISocketWsUserActions } from \"../actions\";\nimport { Middleware } from \"redux\";\nimport { RootState } from \"../../index\";\n\nexport const socketUserMiddleware = (\n  wsUserUrl: string,\n  wsUserActions: ISocketWsUserActions\n): Middleware<{}, RootState> => {\n  return (store) => {\n    let socket: WebSocket | null = null;\n\n    return (next) => (action) => {\n      const { dispatch, getState } = store;\n      const { type, payload } = action;\n      const {\n        wsUserInit,\n        wsUserSendOrder,\n        userOnOpen,\n        userOnClose,\n        userOnError,\n        userOnOrder,\n      } = wsUserActions;\n      const { accessToken } = getState().auth;\n\n      if (type === wsUserInit && accessToken) {\n        socket = new WebSocket(`${wsUserUrl}?token=${accessToken}`);\n      }\n\n      if (socket) {\n        socket.onopen = (event) => {\n          dispatch({ type: userOnOpen, payload: event });\n        };\n\n        socket.onerror = (event) => {\n          dispatch({ type: userOnError, payload: event });\n        };\n\n        socket.onmessage = (event) => {\n          const { data } = event;\n          const parsedData = JSON.parse(data);\n          const { success, ...restParsedData } = parsedData;\n\n          dispatch({ type: userOnOrder, payload: restParsedData });\n        };\n\n        socket.onclose = (event) => {\n          dispatch({ type: userOnClose, payload: event });\n        };\n\n        if (type === wsUserSendOrder) {\n          const order = { ...payload, token: accessToken };\n\n          socket.send(JSON.stringify(order));\n        }\n      }\n\n      next(action);\n    };\n  };\n};\n","import { ISocketWsActions } from \"../actions\";\nimport { Middleware } from \"redux\";\nimport { RootState } from \"../../index\";\n\nexport const socketMiddleware = (\n  wsUrl: string,\n  wsActions: ISocketWsActions\n): Middleware<{}, RootState> => {\n  return (store) => {\n    let socket: WebSocket | null = null;\n\n    return (next) => (action) => {\n      const { dispatch, getState } = store;\n      const { type, payload } = action;\n      const { wsInit, wsSendOrder, onOpen, onClose, onError, onOrder } =\n        wsActions;\n      const { accessToken } = getState().auth;\n\n      if (type === wsInit) {\n        socket = new WebSocket(`${wsUrl}`);\n      }\n\n      if (socket) {\n        socket.onopen = (event) => {\n          dispatch({ type: onOpen, payload: event });\n        };\n\n        socket.onerror = (event) => {\n          dispatch({ type: onError, payload: event });\n        };\n\n        socket.onmessage = (event) => {\n          const { data } = event;\n          const parsedData = JSON.parse(data);\n          const { success, ...restParsedData } = parsedData;\n\n          dispatch({ type: onOrder, payload: restParsedData });\n        };\n\n        socket.onclose = (event) => {\n          dispatch({ type: onClose, payload: event });\n        };\n\n        if (type === wsSendOrder) {\n          const order = { ...payload, token: accessToken };\n\n          socket.send(JSON.stringify(order));\n        }\n      }\n\n      next(action);\n    };\n  };\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { positions, transitions } from \"react-alert\";\n\nexport const alertOptions: object = {\n  offset: \"-100px\",\n  position: positions.MIDDLE,\n  timeout: 3000,\n  transition: transitions.FADE,\n};\n","import {\n  TypedUseSelectorHook,\n  useDispatch as dispatchHook,\n  useSelector as selectorHook,\n} from \"react-redux\";\nimport { AppDispatch, RootState } from \"../../index\";\n\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\nexport const useDispatch = () => dispatchHook<AppDispatch>();\n","export const setCookie = (name: string, value: string) => {\n  document.cookie = `${name}=${value}; Path=/;`;\n};\n\nexport const getCookie = (name: string) => {\n  const matches = document.cookie.match(\n    new RegExp(\n      \"(?:^|; )\" + name.replace(/([.$?*|{}()[\\]\\\\/+^])/g, \"\\\\$1\") + \"=([^;]*)\"\n    )\n  );\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n};\n\nexport const deleteCookie = (name: string) => {\n  document.cookie = `${name}=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;`;\n};\n","import { deleteCookie, setCookie } from \"../helpers-cookie\";\nimport {\n  ILoginForm,\n  IRegisterForm,\n  IResetPasswordData,\n  ITokens,\n} from \"../actions\";\n\nconst login = async (form: ILoginForm) => {\n  const response = await fetch(\n    \"https://norma.nomoreparties.space/api/auth/login\",\n    {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(form),\n    }\n  );\n\n  const data = await response.json();\n\n  if (data.success) {\n    removeTokens();\n    setTokens(data);\n  } else {\n    throw new Error(data.message);\n  }\n\n  return data;\n};\n\nconst logout = async (token: string) => {\n  const response = await fetch(\n    \"https://norma.nomoreparties.space/api/auth/logout\",\n    {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify({ token }),\n    }\n  );\n\n  const data = await response.json();\n\n  if (data.success) {\n    removeTokens();\n  } else {\n    throw new Error(data.message);\n  }\n};\n\nconst updateToken = async (token: string) => {\n  const response = await fetch(\n    \"https://norma.nomoreparties.space/api/auth/token\",\n    {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify({ token }),\n    }\n  );\n\n  const data = await response.json();\n\n  if (data.success) {\n    removeTokens();\n    setTokens(data);\n  } else {\n    throw new Error(data.message);\n  }\n\n  return data;\n};\n\nconst register = async (form: IRegisterForm) => {\n  const response = await fetch(\n    \"https://norma.nomoreparties.space/api/auth/register\",\n    {\n      method: \"POST\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(form),\n    }\n  );\n\n  const data = await response.json();\n\n  if (data.success) {\n    removeTokens();\n    setTokens(data);\n  } else {\n    throw new Error(data.message);\n  }\n\n  return data;\n};\n\nconst forgotPassword = async (email: string) => {\n  const response = await fetch(\n    \"https://norma.nomoreparties.space/api/password-reset\",\n    {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify({\n        email,\n      }),\n    }\n  );\n\n  const data = await response.json();\n\n  if (!data.success) {\n    throw new Error(data.message);\n  }\n};\n\nconst resetPassword = async (form: IResetPasswordData) => {\n  const response = await fetch(\n    \"https://norma.nomoreparties.space/api/password-reset/reset\",\n    {\n      method: \"POST\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(form),\n    }\n  );\n\n  const data = await response.json();\n\n  if (!data.success) {\n    throw new Error(data.message);\n  }\n};\n\nconst setTokens = ({ accessToken, refreshToken }: ITokens) => {\n  setCookie(\"token\", accessToken.split(\"Bearer \")[1]);\n  localStorage.setItem(\"refreshToken\", refreshToken);\n};\n\nconst removeTokens = () => {\n  deleteCookie(\"token\");\n  localStorage.removeItem(\"refreshToken\");\n};\n\nexport const authService = {\n  login,\n  logout,\n  updateToken,\n  register,\n  forgotPassword,\n  resetPassword,\n  removeTokens,\n};\n","export const WS_CONNECTION_START: \"WS_CONNECTION_START\" = \"WS_CONNECTION_START\";\nexport const WS_CONNECTION_SUCCESS: \"WS_CONNECTION_SUCCESS\" =\n  \"WS_CONNECTION_SUCCESS\";\nexport const WS_CONNECTION_ERROR: \"WS_CONNECTION_ERROR\" = \"WS_CONNECTION_ERROR\";\nexport const WS_CONNECTION_CLOSED: \"WS_CONNECTION_CLOSED\" =\n  \"WS_CONNECTION_CLOSED\";\nexport const WS_GET_ORDER: \"WS_GET_ORDER\" = \"WS_GET_ORDER\";\nexport const WS_SEND_ORDER: \"WS_SEND_ORDER\" = \"WS_SEND_ORDER\";\n","export const WS_USER_CONNECTION_START: \"WS_USER_CONNECTION_START\" =\n  \"WS_USER_CONNECTION_START\";\nexport const WS_USER_CONNECTION_SUCCESS: \"WS_USER_CONNECTION_SUCCESS\" =\n  \"WS_USER_CONNECTION_SUCCESS\";\nexport const WS_USER_CONNECTION_ERROR: \"WS_USER_CONNECTION_ERROR\" =\n  \"WS_USER_CONNECTION_ERROR\";\nexport const WS_USER_CONNECTION_CLOSED: \"WS_USER_CONNECTION_CLOSED\" =\n  \"WS_USER_CONNECTION_CLOSED\";\nexport const WS_USER_GET_ORDER: \"WS_USER_GET_ORDER\" = \"WS_USER_GET_ORDER\";\nexport const WS_USER_SEND_ORDER: \"WS_USER_SEND_ORDER\" = \"WS_USER_SEND_ORDER\";\n","export const SET_AUTHORIZATION: \"SET_AUTHORIZATION\" = \"SET_AUTHORIZATION\";\nexport const CLEAR_AUTHORIZATION: \"CLEAR_AUTHORIZATION\" = \"CLEAR_AUTHORIZATION\";\nexport const SET_EMAIL_RESET: \"SET_EMAIL_RESET\" = \"SET_EMAIL_RESET\";\n\nexport const LOGIN_REQUEST: \"LOGIN_REQUEST\" = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS: \"LOGIN_SUCCESS\" = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE: \"LOGIN_FAILURE\" = \"LOGIN_FAILURE\";\n\nexport const LOGOUT_REQUEST: \"LOGOUT_REQUEST\" = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\" = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILURE: \"LOGOUT_FAILURE\" = \"LOGOUT_FAILURE\";\n\nexport const UPDATE_TOKEN_REQUEST: \"UPDATE_TOKEN_REQUEST\" =\n  \"UPDATE_TOKEN_REQUEST\";\nexport const UPDATE_TOKEN_SUCCESS: \"UPDATE_TOKEN_SUCCESS\" =\n  \"UPDATE_TOKEN_SUCCESS\";\nexport const UPDATE_TOKEN_FAILURE: \"UPDATE_TOKEN_FAILURE\" =\n  \"UPDATE_TOKEN_FAILURE\";\n\nexport const REGISTER_REQUEST: \"REGISTER_REQUEST\" = \"REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS: \"REGISTER_SUCCESS\" = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILURE: \"REGISTER_FAILURE\" = \"REGISTER_FAILURE\";\n\nexport const FORGOT_PASSWORD_REQUEST: \"FORGOT_PASSWORD_REQUEST\" =\n  \"FORGOT_PASSWORD_REQUEST\";\nexport const FORGOT_PASSWORD_SUCCESS: \"FORGOT_PASSWORD_SUCCESS\" =\n  \"FORGOT_PASSWORD_SUCCESS\";\nexport const FORGOT_PASSWORD_FAILURE: \"FORGOT_PASSWORD_FAILURE\" =\n  \"FORGOT_PASSWORD_FAILURE\";\n\nexport const RESET_PASSWORD_REQUEST: \"RESET_PASSWORD_REQUEST\" =\n  \"RESET_PASSWORD_REQUEST\";\nexport const RESET_PASSWORD_SUCCESS: \"RESET_PASSWORD_SUCCESS\" =\n  \"RESET_PASSWORD_SUCCESS\";\nexport const RESET_PASSWORD_FAILURE: \"RESET_PASSWORD_FAILURE\" =\n  \"RESET_PASSWORD_FAILURE\";\n","export const GET_INGREDIENTS_REQUEST: \"GET_INGREDIENTS_REQUEST\" =\n  \"GET_INGREDIENTS_REQUEST\";\nexport const GET_INGREDIENTS_SUCCESS: \"GET_INGREDIENTS_SUCCESS\" =\n  \"GET_INGREDIENTS_SUCCESS\";\nexport const GET_INGREDIENTS_FAILURE: \"GET_INGREDIENTS_FAILURE\" =\n  \"GET_INGREDIENTS_FAILURE\";\n\nexport const ADD_INGREDIENT: \"ADD_INGREDIENT\" = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT: \"REMOVE_INGREDIENT\" = \"REMOVE_INGREDIENT\";\nexport const UPDATE_INGREDIENTS: \"UPDATE_INGREDIENTS\" = \"UPDATE_INGREDIENTS\";\n\nexport const CLEAR_SELECTED_INGREDIENTS: \"CLEAR_SELECTED_INGREDIENTS\" =\n  \"CLEAR_SELECTED_INGREDIENTS\";\n\nexport const INCREASE_COUNT: \"INCREASE_COUNT\" = \"INCREASE_COUNT\";\nexport const DECREASE_COUNT: \"DECREASE_COUNT\" = \"DECREASE_COUNT\";\n","export const CHECKOUT_ORDER_REQUEST: \"CHECKOUT_ORDER_REQUEST\" =\n  \"CHECKOUT_ORDER_REQUEST\";\nexport const CHECKOUT_ORDER_SUCCESS: \"CHECKOUT_ORDER_SUCCESS\" =\n  \"CHECKOUT_ORDER_SUCCESS\";\nexport const CHECKOUT_ORDER_FAILURE: \"CHECKOUT_ORDER_FAILURE\" =\n  \"CHECKOUT_ORDER_FAILURE\";\n","export const GET_USER_REQUEST: \"GET_USER_REQUEST\" = \"GET_USER_REQUEST\";\nexport const GET_USER_SUCCESS: \"GET_USER_SUCCESS\" = \"GET_USER_SUCCESS\";\nexport const GET_USER_FAILURE: \"GET_USER_FAILURE\" = \"GET_USER_FAILURE\";\n\nexport const UPDATE_USER_REQUEST: \"UPDATE_USER_REQUEST\" = \"UPDATE_USER_REQUEST\";\nexport const UPDATE_USER_SUCCESS: \"UPDATE_USER_SUCCESS\" = \"UPDATE_USER_SUCCESS\";\nexport const UPDATE_USER_FAILURE: \"UPDATE_USER_FAILURE\" = \"UPDATE_USER_FAILURE\";\n","import { authService } from \"../services/auth\";\nimport { setCookie } from \"../helpers-cookie\";\nimport {\n  CLEAR_AUTHORIZATION,\n  FORGOT_PASSWORD_FAILURE,\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  LOGIN_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGOUT_FAILURE,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  REGISTER_FAILURE,\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  RESET_PASSWORD_FAILURE,\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  SET_AUTHORIZATION,\n  SET_EMAIL_RESET,\n  UPDATE_TOKEN_FAILURE,\n  UPDATE_TOKEN_REQUEST,\n  UPDATE_TOKEN_SUCCESS,\n} from \"../action-types\";\nimport { AppDispatch } from \"../../index\";\nimport {\n  IClearAuthorization,\n  IForgotPasswordFailure,\n  IForgotPasswordRequest,\n  IForgotPasswordSuccess,\n  ILoginFailure,\n  ILoginForm,\n  ILoginRequest,\n  ILoginSuccess,\n  ILoginSuccessData,\n  ILogoutFailure,\n  ILogoutRequest,\n  ILogoutSuccess,\n  IRegisterFailure,\n  IRegisterForm,\n  IRegisterRequest,\n  IRegisterSuccess,\n  IRegisterSuccessData,\n  IResetPasswordData,\n  IResetPasswordFailure,\n  IResetPasswordRequest,\n  IResetPasswordSuccess,\n  ISetAuthorization,\n  ISetEmailReset,\n  ITokens,\n  IUpdateTokenFailure,\n  IUpdateTokenRequest,\n  IUpdateTokenSuccess,\n  IUpdateTokenSuccessData,\n} from \"./auth.interface\";\n\nconst setAuthorization = ({ accessToken, refreshToken }: ITokens) => {\n  return (dispatch: AppDispatch) => {\n    authService.removeTokens();\n\n    setCookie(\"token\", accessToken);\n    localStorage.setItem(\"refreshToken\", refreshToken);\n\n    const setAuthorizationType: ISetAuthorization = {\n      type: SET_AUTHORIZATION,\n      accessToken,\n      refreshToken,\n    };\n\n    dispatch(setAuthorizationType);\n  };\n};\n\nconst clearAuthorization = () => {\n  return (dispatch: AppDispatch) => {\n    authService.removeTokens();\n\n    const clearAuthorizationType: IClearAuthorization = {\n      type: CLEAR_AUTHORIZATION,\n    };\n\n    dispatch(clearAuthorizationType);\n  };\n};\n\nconst setEmailReset = (emailReset: boolean) => {\n  return (dispatch: AppDispatch) => {\n    const setEmailResetType: ISetEmailReset = {\n      type: SET_EMAIL_RESET,\n      emailReset,\n    };\n\n    dispatch(setEmailResetType);\n  };\n};\n\nconst login = (form: ILoginForm) => {\n  const request = (): ILoginRequest => ({ type: LOGIN_REQUEST });\n  const success = (data: ILoginSuccessData): ILoginSuccess => ({\n    type: LOGIN_SUCCESS,\n    data,\n  });\n  const failure = (error: Error): ILoginFailure => ({\n    type: LOGIN_FAILURE,\n    error,\n  });\n\n  return async (dispatch: AppDispatch) => {\n    dispatch(request());\n\n    try {\n      const data: ILoginSuccessData = await authService.login(form);\n      dispatch(success(data));\n    } catch (err) {\n      dispatch(failure(err));\n    }\n  };\n};\n\nconst logout = (token: string) => {\n  const request = (): ILogoutRequest => ({ type: LOGOUT_REQUEST });\n  const success = (): ILogoutSuccess => ({ type: LOGOUT_SUCCESS });\n  const failure = (error: Error): ILogoutFailure => ({\n    type: LOGOUT_FAILURE,\n    error,\n  });\n\n  return async (dispatch: AppDispatch) => {\n    dispatch(request());\n\n    try {\n      await authService.logout(token);\n      dispatch(success());\n    } catch (err) {\n      dispatch(failure(err));\n    }\n  };\n};\n\nconst updateToken = (token: string) => {\n  const request = (): IUpdateTokenRequest => ({ type: UPDATE_TOKEN_REQUEST });\n  const success = (data: IUpdateTokenSuccessData): IUpdateTokenSuccess => ({\n    type: UPDATE_TOKEN_SUCCESS,\n    data,\n  });\n  const failure = (error: Error): IUpdateTokenFailure => ({\n    type: UPDATE_TOKEN_FAILURE,\n    error,\n  });\n\n  return async (dispatch: AppDispatch) => {\n    dispatch(request());\n\n    try {\n      const data: IUpdateTokenSuccessData = await authService.updateToken(\n        token\n      );\n      dispatch(success(data));\n    } catch (err) {\n      dispatch(failure(err));\n    }\n  };\n};\n\nconst register = (form: IRegisterForm) => {\n  const request = (): IRegisterRequest => ({ type: REGISTER_REQUEST });\n  const success = (data: IRegisterSuccessData): IRegisterSuccess => ({\n    type: REGISTER_SUCCESS,\n    data,\n  });\n  const failure = (error: Error): IRegisterFailure => ({\n    type: REGISTER_FAILURE,\n    error,\n  });\n\n  return async (dispatch: AppDispatch) => {\n    dispatch(request());\n\n    try {\n      const data: IRegisterSuccessData = await authService.register(form);\n      dispatch(success(data));\n    } catch (err) {\n      dispatch(failure(err));\n    }\n  };\n};\n\nconst forgotPassword = (email: string) => {\n  const request = (): IForgotPasswordRequest => ({\n    type: FORGOT_PASSWORD_REQUEST,\n  });\n  const success = (): IForgotPasswordSuccess => ({\n    type: FORGOT_PASSWORD_SUCCESS,\n  });\n  const failure = (error: Error): IForgotPasswordFailure => ({\n    type: FORGOT_PASSWORD_FAILURE,\n    error,\n  });\n\n  return async (dispatch: AppDispatch) => {\n    dispatch(request());\n\n    try {\n      await authService.forgotPassword(email);\n      dispatch(success());\n    } catch (err) {\n      dispatch(failure(err));\n    }\n  };\n};\n\nconst resetPassword = (form: IResetPasswordData) => {\n  const request = (): IResetPasswordRequest => ({\n    type: RESET_PASSWORD_REQUEST,\n  });\n  const success = (): IResetPasswordSuccess => ({\n    type: RESET_PASSWORD_SUCCESS,\n  });\n  const failure = (error: Error): IResetPasswordFailure => ({\n    type: RESET_PASSWORD_FAILURE,\n    error,\n  });\n\n  return async (dispatch: AppDispatch) => {\n    dispatch(request());\n\n    try {\n      await authService.resetPassword(form);\n      dispatch(success());\n    } catch (err) {\n      dispatch(failure(err));\n    }\n  };\n};\n\nexport const authActions = {\n  setAuthorization,\n  clearAuthorization,\n  setEmailReset,\n  login,\n  logout,\n  updateToken,\n  register,\n  forgotPassword,\n  resetPassword,\n};\n","import { getCookie } from \"../helpers-cookie\";\nimport { IBurgerIngredientsSuccess } from \"../models\";\n\nconst INGREDIENTS_URL = \"https://norma.nomoreparties.space/api/ingredients\";\n\nexport const findAllIngredients =\n  async (): Promise<IBurgerIngredientsSuccess> => {\n    return await new Promise(async (resolve, reject) => {\n      const res = await fetch(INGREDIENTS_URL, {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCookie(\"token\")}`,\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n      });\n\n      if (!res.ok) {\n        reject(\"ERROR network answer was not ok\");\n      }\n\n      const response = await res.json();\n      resolve(response);\n    });\n  };\n","import { authActions } from \"./auth\";\nimport { findAllIngredients } from \"../services/ingredients\";\nimport {\n  ADD_INGREDIENT,\n  INCREASE_COUNT,\n  DECREASE_COUNT,\n  REMOVE_INGREDIENT,\n  UPDATE_INGREDIENTS,\n  GET_INGREDIENTS_REQUEST,\n  GET_INGREDIENTS_SUCCESS,\n  GET_INGREDIENTS_FAILURE,\n  CLEAR_SELECTED_INGREDIENTS,\n} from \"../action-types\";\nimport { IBurgerIngredient, IBurgerIngredientsSuccess } from \"../models\";\nimport { AppDispatch } from \"../../index\";\nimport {\n  IAddIngredient,\n  IDecreaseCount,\n  IGetIngredientsFailure,\n  IGetIngredientsRequest,\n  IIncreaseCount,\n  IRemoveIngredient,\n  IUpdateIngredients,\n} from \"./burger.interface\";\n\nexport const getIngredients = () => {\n  const request = (): IGetIngredientsRequest => ({\n    type: GET_INGREDIENTS_REQUEST,\n  });\n  const success = (data: IBurgerIngredient[]) => ({\n    type: GET_INGREDIENTS_SUCCESS,\n    data,\n  });\n  const failure = (error: Error): IGetIngredientsFailure => ({\n    type: GET_INGREDIENTS_FAILURE,\n    error,\n  });\n\n  return async (dispatch: AppDispatch) => {\n    dispatch(request());\n\n    try {\n      const { data }: IBurgerIngredientsSuccess = await findAllIngredients();\n      dispatch(success(data));\n    } catch (err) {\n      const refreshToken = localStorage.getItem(\"refreshToken\");\n\n      if (err.message === \"jwt expired\" && refreshToken) {\n        dispatch(authActions.updateToken(refreshToken));\n        getIngredients();\n\n        return;\n      }\n\n      dispatch(failure(err));\n    }\n  };\n};\n\nexport const addIngredient = (ingredient: IBurgerIngredient) => {\n  return (dispatch: AppDispatch) => {\n    const addIngredientType: IAddIngredient = {\n      type: ADD_INGREDIENT,\n      ingredient,\n    };\n\n    dispatch(addIngredientType);\n  };\n};\n\nexport const removeIngredient = (ingredient: IBurgerIngredient) => {\n  return (dispatch: AppDispatch) => {\n    const removeIngredientType: IRemoveIngredient = {\n      type: REMOVE_INGREDIENT,\n      ingredient,\n    };\n\n    dispatch(removeIngredientType);\n  };\n};\n\nexport const updateIngredients = (\n  ingredient: IBurgerIngredient,\n  index: number,\n  atIndex: number\n) => {\n  return (dispatch: AppDispatch) => {\n    const updateIngredientsType: IUpdateIngredients = {\n      type: UPDATE_INGREDIENTS,\n      ingredient,\n      index,\n      atIndex,\n    };\n\n    dispatch(updateIngredientsType);\n  };\n};\n\nexport const clearBurgerConstructor = () => {\n  return (dispatch: AppDispatch) => {\n    const clearSelectedIngredientsType = {\n      type: CLEAR_SELECTED_INGREDIENTS,\n    };\n\n    dispatch(clearSelectedIngredientsType);\n  };\n};\n\nexport const increaseCount =\n  (ingredient: IBurgerIngredient) => (dispatch: AppDispatch) => {\n    const increaseCountType: IIncreaseCount = {\n      type: INCREASE_COUNT,\n      ingredient,\n    };\n\n    dispatch(increaseCountType);\n  };\n\nexport const decreaseCount =\n  (ingredient: IBurgerIngredient) => (dispatch: AppDispatch) => {\n    const decreaseCountType: IDecreaseCount = {\n      type: DECREASE_COUNT,\n      ingredient,\n    };\n\n    dispatch(decreaseCountType);\n  };\n","import { getCookie } from \"../helpers-cookie\";\n\nconst CHECKOUT_ORDER_URL = \"https://norma.nomoreparties.space/api/orders\";\n\nexport const checkoutOrderFetch = async (ingredientIDs: string[]) => {\n  const body = JSON.stringify({\n    ingredients: ingredientIDs,\n  });\n\n  const response = await fetch(CHECKOUT_ORDER_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getCookie(\"token\")}`,\n    },\n    body,\n  });\n\n  const data = await response.json();\n\n  if (!data.success) {\n    throw new Error(data.message);\n  }\n\n  return data;\n};\n","import { authActions } from \"./auth\";\nimport { checkoutOrderFetch } from \"../services/order\";\nimport {\n  CHECKOUT_ORDER_FAILURE,\n  CHECKOUT_ORDER_REQUEST,\n  CHECKOUT_ORDER_SUCCESS,\n} from \"../action-types\";\nimport { AppDispatch } from \"../../index\";\nimport {\n  ICheckoutOrderFailure,\n  ICheckoutOrderRequest,\n  ICheckoutOrderSuccess,\n  ISuccessOrder,\n} from \"./order.interface\";\n\nexport const checkoutOrder = (ingredientIDs: string[]) => {\n  const request = (): ICheckoutOrderRequest => ({\n    type: CHECKOUT_ORDER_REQUEST,\n  });\n  const success = (data: ISuccessOrder): ICheckoutOrderSuccess => ({\n    type: CHECKOUT_ORDER_SUCCESS,\n    data,\n  });\n  const failure = (error: Error): ICheckoutOrderFailure => ({\n    type: CHECKOUT_ORDER_FAILURE,\n    error,\n  });\n\n  return async (dispatch: AppDispatch) => {\n    dispatch(request());\n\n    try {\n      const data = await checkoutOrderFetch(ingredientIDs);\n      dispatch(success(data));\n    } catch (err) {\n      const refreshToken = localStorage.getItem(\"refreshToken\");\n\n      if (err.message === \"jwt expired\" && refreshToken) {\n        dispatch(authActions.updateToken(refreshToken));\n        checkoutOrder(ingredientIDs);\n\n        return;\n      }\n\n      dispatch(failure(err));\n    }\n  };\n};\n","import { getCookie } from \"../helpers-cookie\";\nimport { IRegisterForm } from \"../actions\";\n\nconst getUser = async () => {\n  const response = await fetch(\n    \"https://norma.nomoreparties.space/api/auth/user\",\n    {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getCookie(\"token\")}`,\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n    }\n  );\n\n  const data = await response.json();\n\n  if (!data.success) {\n    throw new Error(data.message);\n  }\n\n  return data;\n};\n\nconst updateUser = async (form: IRegisterForm) => {\n  const response = await fetch(\n    \"https://norma.nomoreparties.space/api/auth/user\",\n    {\n      method: \"PATCH\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getCookie(\"token\")}`,\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(form),\n    }\n  );\n\n  const data = await response.json();\n\n  if (!data.success) {\n    throw new Error(data.message);\n  }\n\n  return data;\n};\n\nexport const profileService = {\n  getUser,\n  updateUser,\n};\n","import { profileService } from \"../services/profile\";\nimport { authActions } from \"./auth\";\nimport {\n  GET_USER_FAILURE,\n  GET_USER_REQUEST,\n  GET_USER_SUCCESS,\n  UPDATE_USER_FAILURE,\n  UPDATE_USER_REQUEST,\n  UPDATE_USER_SUCCESS,\n} from \"../action-types\";\nimport { AppDispatch } from \"../../index\";\nimport {\n  IGetUserFailure,\n  IGetUserRequest,\n  IGetUserSuccess,\n  IUpdateUserFailure,\n  IUpdateUserRequest,\n  IUpdateUserSuccess,\n} from \"./profile.interface\";\nimport { IRegisterForm, IUserSuccess } from \"./auth.interface\";\n\nconst getUser = () => {\n  const request = (): IGetUserRequest => ({ type: GET_USER_REQUEST });\n  const success = (data: IUserSuccess): IGetUserSuccess => ({\n    type: GET_USER_SUCCESS,\n    data,\n  });\n  const failure = (error: Error): IGetUserFailure => ({\n    type: GET_USER_FAILURE,\n    error,\n  });\n\n  return async (dispatch: AppDispatch) => {\n    dispatch(request());\n\n    try {\n      const data = await profileService.getUser();\n      dispatch(success(data));\n    } catch (err) {\n      const refreshToken = localStorage.getItem(\"refreshToken\");\n\n      if (err.message === \"jwt expired\" && refreshToken) {\n        dispatch(authActions.updateToken(refreshToken));\n        getUser();\n\n        return;\n      }\n\n      dispatch(failure(err));\n    }\n  };\n};\n\nconst updateUser = (form: IRegisterForm) => {\n  const request = (): IUpdateUserRequest => ({ type: UPDATE_USER_REQUEST });\n  const success = (data: IUserSuccess): IUpdateUserSuccess => ({\n    type: UPDATE_USER_SUCCESS,\n    data,\n  });\n  const failure = (error: Error): IUpdateUserFailure => ({\n    type: UPDATE_USER_FAILURE,\n    error,\n  });\n\n  return async (dispatch: AppDispatch) => {\n    dispatch(request());\n\n    try {\n      const data = await profileService.updateUser(form);\n      dispatch(success(data));\n    } catch (err) {\n      const refreshToken = localStorage.getItem(\"refreshToken\");\n\n      if (err.message === \"jwt expired\" && refreshToken) {\n        dispatch(authActions.updateToken(refreshToken));\n        updateUser(form);\n\n        return;\n      }\n\n      dispatch(failure(err));\n    }\n  };\n};\n\nexport const profileActions = {\n  getUser,\n  updateUser,\n};\n","import React, { FC, ReactElement } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport HeaderItemStyles from \"./header-item.module.css\";\n\ninterface IHeaderItem {\n  svgIcon: ReactElement;\n  text: string;\n  path: string;\n}\n\nexport const HeaderItem: FC<IHeaderItem> = ({ svgIcon, text, path = \"/\" }) => {\n  const { location } = useHistory();\n  const { pathname } = location;\n\n  const headerItemStyle = `${HeaderItemStyles.menuItem} mb-3 mt-3 ml-5 mr-5`;\n  const headerItemText = `${HeaderItemStyles.text} text text_type_main-default pl-2`;\n  const headerNavLinkStyle = `${HeaderItemStyles.link} text_color_inactive`;\n\n  return (\n    <li className={headerItemStyle}>\n      <NavLink\n        to={path}\n        className={headerNavLinkStyle}\n        activeClassName={\n          pathname === path ? HeaderItemStyles.active : undefined\n        }\n      >\n        {svgIcon}\n        <p className={headerItemText}>{text}</p>\n      </NavLink>\n    </li>\n  );\n};\n","import React from \"react\";\nimport { ProfileIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { HeaderItem } from \"../header-item/header-item\";\nimport ProfileStyles from \"./profile-header.module.css\";\n\nexport const ProfileHeader = () => {\n  const svgIcon = <ProfileIcon type=\"secondary\" />;\n  const text = \"Личный кабинет\";\n\n  return (\n    <ul className={ProfileStyles.profile}>\n      <HeaderItem svgIcon={svgIcon} text={text} path=\"/profile\" />\n    </ul>\n  );\n};\n","import React, { ReactElement } from \"react\";\nimport {\n  BurgerIcon,\n  ListIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\ninterface IRoutes {\n  id: number;\n  svgIcon: ReactElement;\n  text: string;\n  padding: string;\n  path: string;\n}\n\nexport const routes: IRoutes[] = [\n  {\n    id: 1,\n    svgIcon: <BurgerIcon type=\"primary\" />,\n    text: \"Конструктор\",\n    padding: \"p-5\",\n    path: \"/\",\n  },\n  {\n    id: 2,\n    svgIcon: <ListIcon type=\"secondary\" />,\n    text: \"Лента заказов\",\n    padding: \"p-5\",\n    path: \"/feed\",\n  },\n];\n","import React from \"react\";\nimport MenuStyles from \"./menu.module.css\";\nimport { routes } from \"./routes\";\nimport { HeaderItem } from \"../header-item/header-item\";\n\nexport const Menu = () => {\n  return (\n    <nav>\n      <ul className={MenuStyles.menu}>\n        {routes.map((item) => (\n          <HeaderItem key={item.id} {...item} />\n        ))}\n      </ul>\n    </nav>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Logo } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport headerStyles from \"./app-header.module.css\";\nimport { ProfileHeader } from \"../profile-header/profile-header\";\nimport { Menu } from \"../menu/menu\";\n\nexport const AppHeader = () => {\n  const headerStyle = `${headerStyles.header} col-9`;\n\n  return (\n    <header className={headerStyles.wrapper}>\n      <div className={headerStyle}>\n        <Menu />\n        <Link to=\"/\" className={headerStyles.logo}>\n          <Logo />\n        </Link>\n        <ProfileHeader />\n      </div>\n    </header>\n  );\n};\n","import React, { FC, useEffect } from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\nimport { authActions } from \"../actions\";\nimport { useDispatch, useSelector } from \"../hooks\";\n\nexport const ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\n  const dispatch = useDispatch();\n  const { isAuthorized } = useSelector(({ auth }) => auth);\n  const refreshToken = localStorage.getItem(\"refreshToken\");\n\n  useEffect(() => {\n    if (!isAuthorized && refreshToken) {\n      dispatch(authActions.updateToken(refreshToken));\n    }\n  }, [dispatch, isAuthorized, refreshToken]);\n\n  if (!isAuthorized && refreshToken) {\n    return null;\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthorized ? (\n          children\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n        )\n      }\n    />\n  );\n};\n","import React, { FC } from \"react\";\nimport MainStyles from \"./main.module.css\";\n\nexport const Main: FC = ({ children }) => {\n  const mainStyle = `${MainStyles.main} col-9`;\n\n  return <main className={mainStyle}>{children}</main>;\n};\n","import React, { FC } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport {\n  Counter,\n  CurrencyIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport CardItemStyles from \"./burger-ingredients-card-item.module.css\";\nimport { IBurgerIngredientsCardItem } from \"../../services/models\";\n\nexport const BurgerIngredientsCardItem: FC<IBurgerIngredientsCardItem> = ({\n  ingredient,\n  ingredientClickHandler,\n}) => {\n  const { _id, name, price, image, count } = ingredient;\n  const [, dragRef] = useDrag({\n    type: \"burgerIngredient\",\n    item: { id: _id },\n    collect: (monitor) => ({\n      isDrag: monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <article\n      className={CardItemStyles.card}\n      onClick={() => ingredientClickHandler(_id)}\n      ref={dragRef}\n      title={name}\n    >\n      <div className=\"ml-3 mr-3\">\n        {count && <Counter count={count} size=\"default\" />}\n        <img src={image} alt={name} width=\"100%\" />\n        <div className={CardItemStyles.priceCurrency}>\n          <span className=\"text text_type_main-medium\">{price}</span>\n          <div className={CardItemStyles.currencyIcon}>\n            <CurrencyIcon type=\"primary\" />\n          </div>\n        </div>\n        <span>{name}</span>\n      </div>\n    </article>\n  );\n};\n","import React, { FC } from \"react\";\nimport { BurgerIngredientsCardItem } from \"../burger-ingredients-card-item/burger-ingredients-card-item\";\nimport CardStyles from \"./burger-ingredients-card.module.css\";\nimport { IBurgerIngredientsCard } from \"../../services/models\";\n\nexport const BurgerIngredientsCard: FC<IBurgerIngredientsCard> = ({\n  title,\n  ingredients,\n  tabRef,\n  ingredientClickHandler,\n}) => {\n  return (\n    <div ref={tabRef}>\n      <p className=\"text text_type_main-medium mb-6\">{title}</p>\n\n      <div className={CardStyles.card}>\n        {ingredients.map((item) => (\n          <BurgerIngredientsCardItem\n            key={item._id}\n            ingredientClickHandler={ingredientClickHandler}\n            ingredient={item}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport BurgerIngredientsTabsContentStyles from \"./burger-ingredients-tabs-content.module.css\";\nimport { BurgerIngredientsCard } from \"../burger-ingredients-card/burger-ingredients-card\";\nimport { useSelector } from \"../../services/hooks\";\nimport {\n  IBurgerIngredient,\n  IBurgerIngredientsTabsContent,\n} from \"../../services/models\";\n\nexport const BurgerIngredientsTabsContent: FC<IBurgerIngredientsTabsContent> =\n  ({\n    bunRef,\n    sauceRef,\n    mainRef,\n    ingredientClickHandler,\n    scrollContainerRef,\n    handleScroll,\n  }) => {\n    const ingredients: IBurgerIngredient[] = useSelector(\n      ({ burger }) => burger.ingredients\n    );\n\n    const buns = ingredients.filter((item) => item.type === \"bun\");\n    const sauce = ingredients.filter((item) => item.type === \"sauce\");\n    const main = ingredients.filter((item) => item.type === \"main\");\n\n    const tabsContent = [\n      {\n        title: \"Булки\",\n        ingredients: buns,\n        tabRef: bunRef,\n      },\n      {\n        title: \"Соусы\",\n        ingredients: sauce,\n        tabRef: sauceRef,\n      },\n      {\n        title: \"Начинки\",\n        ingredients: main,\n        tabRef: mainRef,\n      },\n    ];\n\n    return (\n      <div\n        className={BurgerIngredientsTabsContentStyles.tabContent}\n        ref={scrollContainerRef}\n        onScroll={handleScroll}\n      >\n        {tabsContent.map((item) => (\n          <BurgerIngredientsCard\n            key={item.title}\n            title={item.title}\n            ingredients={item.ingredients}\n            tabRef={item.tabRef}\n            ingredientClickHandler={ingredientClickHandler}\n          />\n        ))}\n      </div>\n    );\n  };\n","import React, { FC } from \"react\";\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport BurgerIngredientsTabsStyles from \"./burger-ingredients-tabs.module.css\";\nimport { IBurgerIngredientsTabs } from \"../../services/models\";\n\nexport const BurgerIngredientsTabs: FC<IBurgerIngredientsTabs> = ({\n  bunRef,\n  sauceRef,\n  mainRef,\n  currentTab,\n  tabClickHandler,\n}) => {\n  const tabStyle = `${BurgerIngredientsTabsStyles.tabs} mb-10`;\n\n  return (\n    <div className={tabStyle}>\n      <Tab\n        value=\"bun\"\n        active={currentTab === \"bun\"}\n        onClick={() => tabClickHandler(\"bun\", bunRef)}\n      >\n        Булки\n      </Tab>\n      <Tab\n        value=\"sauce\"\n        active={currentTab === \"sauce\"}\n        onClick={() => tabClickHandler(\"sauce\", sauceRef)}\n      >\n        Соусы\n      </Tab>\n      <Tab\n        value=\"main\"\n        active={currentTab === \"main\"}\n        onClick={() => tabClickHandler(\"main\", mainRef)}\n      >\n        Начинки\n      </Tab>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport IngredientDetailsItemStyles from \"./ingredient-details-item.module.css\";\nimport { IIngredientDetailInfo } from \"../../services/models\";\n\nexport const IngredientDetailsItem: FC<IIngredientDetailInfo> = ({\n  title,\n  info,\n}) => {\n  return (\n    <div className={IngredientDetailsItemStyles.ingredientDetailsItem}>\n      <span className=\"text text_type_main-default\">{title}</span>\n      <span className=\"text text_type_digits-default\">{info}</span>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { IngredientDetailsItem } from \"../ingredient-details-item/ingredient-details-item\";\nimport IngredientStyles from \"./ingredient-details.module.css\";\nimport {\n  IBurgerIngredient,\n  IIngredientDetailInfo,\n} from \"../../services/models\";\n\nexport const IngredientDetails: FC<IBurgerIngredient> = ({\n  _id,\n  name,\n  image_large,\n  calories,\n  proteins,\n  fat,\n  carbohydrates,\n}) => {\n  const details: IIngredientDetailInfo[] = [\n    {\n      title: \"Калории,ккал\",\n      info: calories,\n    },\n    {\n      title: \"Белки, г\",\n      info: proteins,\n    },\n    {\n      title: \"Жиры, г\",\n      info: fat,\n    },\n    {\n      title: \"Углеводы, г\",\n      info: carbohydrates,\n    },\n  ];\n\n  return (\n    <div className={IngredientStyles.ingredientDetails}>\n      <img src={image_large} alt=\"Ingredient\" />\n      <span className=\"text text_type_main-medium\" style={{ display: \"block\" }}>\n        {name}\n      </span>\n      <div className={IngredientStyles.helpfulness}>\n        {details.map((detail) => (\n          <IngredientDetailsItem key={detail.title} {...detail} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\ninterface ISpinner {\n  height?: number;\n  width?: number;\n}\n\nexport const Spinner: FC<ISpinner> = ({ height = 100, width = 100 }) => {\n  return (\n    <div style={{ margin: \"5% auto 0\", textAlign: \"center\" }}>\n      <Loader type=\"Oval\" color=\"#00BFFF\" height={height} width={width} />\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport ModalOverlayStyles from \"./modal-overlay.module.css\";\n\nexport const ModalOverlay: FC = ({ children }) => {\n  return <div className={ModalOverlayStyles.modalOverlay}>{children}</div>;\n};\n","import React, { FC, useCallback, useEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { ModalOverlay } from \"../modal-overlay/modal-overlay\";\nimport ModalStyles from \"./modal.module.css\";\n\nconst ESC_CODE = 27;\n\nconst modalRoot = document.getElementById(\"react-modals\");\n\ninterface IModal {\n  header?: string;\n  onClose: () => void;\n}\n\nexport const Modal: FC<IModal> = ({ header, onClose, children }) => {\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  const keyDownHandler = useCallback<(key: KeyboardEvent) => void>(\n    ({ keyCode }) => {\n      if (keyCode === ESC_CODE) {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n\n  const clickHandler = useCallback(\n    ({ target }) => {\n      if (!modalRef.current?.contains(target)) {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keyDownHandler, false);\n    document.addEventListener(\"click\", clickHandler, false);\n\n    return () => {\n      document.removeEventListener(\"keydown\", keyDownHandler, false);\n      document.removeEventListener(\"click\", clickHandler, false);\n    };\n  }, [clickHandler, keyDownHandler]);\n\n  return (\n    modalRef &&\n    createPortal(\n      <ModalOverlay>\n        <div className={ModalStyles.modal} ref={modalRef}>\n          <header className={ModalStyles.header}>\n            <div className={ModalStyles.close} onClick={onClose}>\n              <CloseIcon type=\"primary\" />\n            </div>\n            {header && (\n              <span className=\"text text_type_main-medium\">{header}</span>\n            )}\n          </header>\n          {children}\n        </div>\n      </ModalOverlay>,\n      modalRoot as any\n    )\n  );\n};\n","import React, { useRef, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { BurgerIngredientsTabsContent } from \"../burger-ingredients-tabs-content/burger-ingredients-tabs-content\";\nimport { BurgerIngredientsTabs } from \"../burger-ingredients-tabs/burger-ingredients-tabs\";\nimport { IngredientDetails } from \"../ingredient-details/ingredient-details\";\nimport BurgerIngredientsStyles from \"./burger-ingredients.module.css\";\nimport { useSelector } from \"../../services/hooks\";\nimport { Spinner } from \"../spinner/spinner\";\nimport { Modal } from \"../modal/modal\";\nimport { IBurgerIngredient } from \"../../services/models\";\n\nexport const BurgerIngredients = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [visible, setVisible] = useState<boolean>(false);\n  const [ingredient, setIngredient] = useState<IBurgerIngredient | null>();\n  const [currentTab, setCurrentTab] = useState<string>(\"bun\");\n\n  const ingredients: IBurgerIngredient[] = useSelector(\n    ({ burger }) => burger.ingredients\n  );\n  const loading: boolean = useSelector(({ burger }) => burger.loading);\n\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const bunRef = useRef<HTMLDivElement>(null);\n  const sauceRef = useRef<HTMLDivElement>(null);\n  const mainRef = useRef<HTMLDivElement>(null);\n\n  const ingredientClickHandler = (ingredientId: string) => {\n    const selectedIngredient = ingredients\n      .filter((item) => item._id === ingredientId)\n      .reduce<IBurgerIngredient>((acc, cur) => cur, {} as IBurgerIngredient);\n\n    setVisible(true);\n    setIngredient(selectedIngredient);\n\n    history.push({\n      pathname: `/ingredients/${selectedIngredient._id}`,\n      state: { background: location },\n    });\n  };\n\n  const tabClickHandler = (\n    tab: string,\n    tabRef: { current: HTMLDivElement | null }\n  ) => {\n    setCurrentTab(tab);\n    tabRef.current?.scrollIntoView({\n      behavior: \"smooth\",\n    });\n  };\n\n  const handleScroll = () => {\n    // Будем сравнивать расстояния от заголовков до верхней части скроллящегося контейнера\n    const scrollContainerPosition =\n      scrollContainerRef.current?.getBoundingClientRect().top || 0;\n    const firstHeaderPosition =\n      bunRef.current?.getBoundingClientRect().top || 0;\n    const secondHeaderPosition =\n      sauceRef.current?.getBoundingClientRect().top || 0;\n    const thirdHeaderPosition =\n      mainRef.current?.getBoundingClientRect().top || 0;\n\n    // Используем Math.abs, так как число может получиться отрицательное\n    const firstDiff = Math.abs(scrollContainerPosition - firstHeaderPosition);\n    const secondDiff = Math.abs(scrollContainerPosition - secondHeaderPosition);\n    const thirdDiff = Math.abs(scrollContainerPosition - thirdHeaderPosition);\n\n    if (firstDiff < secondDiff) {\n      setCurrentTab(\"bun\");\n    } else if (secondDiff < thirdDiff) {\n      setCurrentTab(\"sauce\");\n    } else {\n      setCurrentTab(\"main\");\n    }\n  };\n\n  const onModalClose = () => {\n    setVisible(false);\n\n    history.push({\n      pathname: \"/\",\n    });\n  };\n\n  return (\n    <>\n      <section className={BurgerIngredientsStyles.burgerIngredients}>\n        {loading && <Spinner />}\n\n        {!loading && ingredients.length && (\n          <>\n            <p className=\"text text_type_main-large mb-5\">Соберите бургер</p>\n\n            <BurgerIngredientsTabs\n              bunRef={bunRef}\n              sauceRef={sauceRef}\n              mainRef={mainRef}\n              currentTab={currentTab}\n              tabClickHandler={tabClickHandler}\n            />\n\n            <BurgerIngredientsTabsContent\n              bunRef={bunRef}\n              sauceRef={sauceRef}\n              mainRef={mainRef}\n              ingredientClickHandler={ingredientClickHandler}\n              scrollContainerRef={scrollContainerRef}\n              handleScroll={handleScroll}\n            />\n          </>\n        )}\n      </section>\n\n      {visible && ingredient && (\n        <Modal header=\"Детали ингредиента\" onClose={onModalClose}>\n          <IngredientDetails {...ingredient} />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import React, { FC, memo } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport {\n  ConstructorElement,\n  DragIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { decreaseCount, removeIngredient } from \"../../services/actions\";\nimport IngredientStyles from \"./burger-constructor-item.module.css\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\nimport {\n  IBurgerIngredient,\n  IBurgerIngredientUniqueID,\n  IConstructedBurger,\n  TFindIngredient,\n  TMoveIngredient,\n} from \"../../services/models\";\n\ninterface IBurgerConstructorItem {\n  findIngredient: TFindIngredient;\n  moveIngredient: TMoveIngredient;\n  ingredient: IConstructedBurger;\n}\n\nexport const BurgerConstructorItem: FC<IBurgerConstructorItem> = memo(\n  ({ findIngredient, moveIngredient, ingredient }) => {\n    const dispatch = useDispatch();\n\n    const { selectedIngredients: ingredients } = useSelector(\n      ({ burger }) => burger\n    );\n\n    const handleRemove = (id: string) => {\n      const ingredient = ingredients\n        .filter((item: IBurgerIngredient) => item._id === id)\n        .reduce<IBurgerIngredient>((acc, curr) => {\n          return curr;\n        }, {} as IBurgerIngredient);\n\n      dispatch(removeIngredient(ingredient));\n      dispatch(decreaseCount(ingredient));\n    };\n\n    const uniqueID = ingredient.uniqueID;\n    const originalIndex = findIngredient\n      ? findIngredient(uniqueID).index\n      : null;\n\n    const [{ isDragging }, dragRef] = useDrag(\n      () => ({\n        type: \"burger\",\n        item: { uniqueID, originalIndex },\n        collect: (monitor) => ({\n          isDragging: monitor.isDragging(),\n        }),\n        end: (item, monitor) => {\n          const { uniqueID: droppedId, originalIndex } = item;\n          const didDrop = monitor.didDrop();\n\n          if (!didDrop) {\n            moveIngredient(droppedId, originalIndex);\n          }\n        },\n      }),\n      [uniqueID, originalIndex, moveIngredient]\n    );\n\n    const [, dropRef] = useDrop(\n      () => ({\n        accept: \"burger\",\n        canDrop: () => false,\n        hover({ uniqueID: draggedId }: IBurgerIngredientUniqueID) {\n          if (draggedId !== uniqueID) {\n            const { index: overIndex } = findIngredient(uniqueID);\n            moveIngredient(draggedId, overIndex);\n          }\n        },\n      }),\n      [findIngredient, moveIngredient]\n    );\n\n    const opacity = isDragging ? 0 : 1;\n\n    return (\n      <div\n        className={IngredientStyles.ingredient}\n        ref={(node) => dragRef(dropRef(node))}\n        style={{ opacity }}\n      >\n        <div className={IngredientStyles.drag}>\n          <DragIcon type=\"primary\" />\n        </div>\n        <div className={IngredientStyles.ingredientEl}>\n          <ConstructorElement\n            {...ingredient}\n            handleClose={() => handleRemove(ingredient._id)}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n","import React, { FC, memo } from \"react\";\nimport { ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport IngredientStyles from \"./burger-constructor-bun.module.css\";\nimport { IConstructedBurgerBun } from \"../../services/models\";\n\nexport const BurgerConstructorBun: FC<IConstructedBurgerBun> = memo(\n  ({ type, text, ...props }) => {\n    const newText = type === \"top\" ? `${text} (верх)` : `${text} (низ)`;\n\n    return (\n      <div className={IngredientStyles.ingredient}>\n        <div className={IngredientStyles.ingredientEl}>\n          <ConstructorElement {...props} type={type} text={newText} />\n        </div>\n      </div>\n    );\n  }\n);\n","import { IBurgerIngredient } from \"../../services/models\";\n\nexport const constructBurgerBun = (\n  burgerIngredient: IBurgerIngredient,\n  type: \"bottom\" | \"top\"\n) => ({\n  type: type,\n  isLocked: true,\n  _id: burgerIngredient?._id,\n  uniqueID: burgerIngredient?.uniqueID,\n  text: burgerIngredient?.name,\n  price: burgerIngredient?.price,\n  thumbnail: burgerIngredient?.image,\n});\n\nexport const constructBurger = (ingredients: IBurgerIngredient[]) => {\n  return ingredients\n    .filter((item) => item.type !== \"bun\")\n    .map((item) => ({\n      _id: item?._id,\n      uniqueID: item?.uniqueID,\n      text: item?.name,\n      price: item?.price,\n      thumbnail: item?.image,\n    }));\n};\n","export default __webpack_public_path__ + \"static/media/done.85c3a14d.svg\";","import React, { useEffect } from \"react\";\nimport { clearBurgerConstructor } from \"../../services/actions\";\nimport OrderAcceptedStyles from \"./order-details.module.css\";\nimport Done from \"../../images/done.svg\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\n\nexport const OrderDetails = () => {\n  const dispatch = useDispatch();\n  const { order } = useSelector(({ orderReducer }) => orderReducer);\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearBurgerConstructor());\n    };\n  }, [dispatch]);\n\n  const orderIdStyle = `${OrderAcceptedStyles.orderId} text text_type_digits-large`;\n  const textGreyStyle = `${OrderAcceptedStyles.textGrey} text text_type_main-default mt-2`;\n\n  return (\n    <div className={OrderAcceptedStyles.orderAccepted}>\n      <span className={orderIdStyle}>{order?.number}</span>\n      <span className=\"text text_type_main-medium mt-8\">\n        идентификатор заказа\n      </span>\n      <img src={Done} alt=\"Done\" className=\"mt-15\" />\n      <span className=\"text text_type_main-default mt-15\">\n        Ваш заказ начали готовить\n      </span>\n      <span className={textGreyStyle}>\n        Дождитесь готовности на орбитальной станции\n      </span>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { OrderDetails } from \"../order-details/order-details\";\nimport { checkoutOrder, wsSendMessage } from \"../../services/actions\";\nimport { Spinner } from \"../spinner/spinner\";\nimport { Modal } from \"../modal/modal\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\nimport { IBurgerIngredient } from \"../../services/models\";\n\nexport const OrderButton = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [visible, setVisible] = useState<boolean>(false);\n\n  const ingredients: IBurgerIngredient[] = useSelector(\n    ({ burger }) => burger.selectedIngredients\n  );\n  const { isAuthorized } = useSelector(({ auth }) => auth);\n  const { loading, order } = useSelector(({ orderReducer }) => orderReducer);\n\n  const ingredientIDs = ingredients.map((item) => item._id);\n\n  useEffect(() => {\n    if (!loading && order && ingredientIDs.length) {\n      dispatch(\n        wsSendMessage({\n          name: order.name,\n          orderNumber: order.number,\n          ingredientIDs,\n        })\n      );\n    }\n  }, [dispatch, loading, order, ingredientIDs]);\n\n  const onModalClose = () => {\n    setVisible(false);\n  };\n\n  const checkoutHandler = async () => {\n    if (!isAuthorized) {\n      history.push(\"/login\");\n    }\n\n    const bun = ingredients.filter((item) => item.type === \"bun\");\n\n    // Запрос к серверу за номером заказа нельзя отправить пока не добавлена булка.\n    if (!bun.length) {\n      return null;\n    }\n\n    dispatch(checkoutOrder(ingredientIDs));\n\n    setVisible(true);\n  };\n\n  return (\n    <>\n      {loading && (\n        <div>\n          <Spinner />\n        </div>\n      )}\n\n      {!loading && (\n        <Button type=\"primary\" size=\"large\" onClick={checkoutHandler}>\n          Оформить заказ\n        </Button>\n      )}\n\n      {visible && !loading && order && (\n        <Modal onClose={onModalClose}>\n          <OrderDetails />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import {\n  WS_CONNECTION_CLOSED,\n  WS_CONNECTION_ERROR,\n  WS_CONNECTION_SUCCESS,\n  WS_GET_ORDER,\n  WS_SEND_ORDER,\n} from \"../action-types\";\nimport {\n  IWsConnectionClosed,\n  IWsConnectionError,\n  IWsConnectionSuccess,\n  IWsGetMessage,\n  IWsSendMessage,\n} from \"./ws-actions.interface\";\nimport { IWsOrder } from \"./order.interface\";\nimport { IOrderStatusList } from \"../../components/order-status-list/order-status-list\";\n\nexport const wsConnectionSuccess = (): IWsConnectionSuccess => {\n  return {\n    type: WS_CONNECTION_SUCCESS,\n  };\n};\n\nexport const wsConnectionError = (): IWsConnectionError => {\n  return {\n    type: WS_CONNECTION_ERROR,\n  };\n};\n\nexport const wsConnectionClosed = (): IWsConnectionClosed => {\n  return {\n    type: WS_CONNECTION_CLOSED,\n  };\n};\n\nexport const wsGetMessage = (\n  orderStatusList: IOrderStatusList\n): IWsGetMessage => {\n  return {\n    type: WS_GET_ORDER,\n    payload: orderStatusList,\n  };\n};\n\nexport const wsSendMessage = (order: IWsOrder): IWsSendMessage => {\n  return {\n    type: WS_SEND_ORDER,\n    payload: order,\n  };\n};\n","import React from \"react\";\nimport { useSelector } from \"../../services/hooks\";\nimport { IBurgerIngredient } from \"../../services/models\";\n\nexport const TotalPrice = () => {\n  const ingredients: IBurgerIngredient[] = useSelector(\n    ({ burger }) => burger.selectedIngredients\n  );\n\n  // Стоимость рассчитывается как сумма всех ингредиентов добавленных в конструктор.\n  // В стоимость должны быть включены две булки - верх и низ.\n  const totalPrice = ingredients.reduce(\n    (total, ingredient) => total + ingredient.price,\n    0\n  );\n\n  return <span className=\"text text_type_digits-medium\">{totalPrice}</span>;\n};\n","import React, { FC, memo, useCallback } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { BurgerConstructorItem } from \"../burger-constructor-item/burger-constructor-item\";\nimport { BurgerConstructorBun } from \"../burger-constructor-bun/burger-constructor-bun\";\nimport { constructBurger, constructBurgerBun } from \"./construct-burger\";\nimport { updateIngredients } from \"../../services/actions\";\nimport IngredientsStyles from \"./burger-constructor.module.css\";\nimport { OrderButton } from \"../order-button/order-button\";\nimport { TotalPrice } from \"../total-price/total-price\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\nimport {\n  IBurgerIngredient,\n  IBurgerIngredientID,\n  TFindIngredient,\n  TMoveIngredient,\n} from \"../../services/models\";\n\ninterface IBurgerConstructor {\n  onDropHandler: (item: IBurgerIngredientID) => void;\n}\n\nexport const BurgerConstructor: FC<IBurgerConstructor> = memo(\n  ({ onDropHandler }) => {\n    const dispatch = useDispatch();\n\n    const ingredients: Array<IBurgerIngredient> = useSelector(\n      ({ burger }) => burger.selectedIngredients\n    );\n\n    const [{ isHoverConstructor }, dropInConstructor] = useDrop({\n      accept: \"burgerIngredient\",\n      collect: (monitor) => ({\n        isHoverConstructor: monitor.isOver(),\n      }),\n      drop(item: IBurgerIngredientID) {\n        onDropHandler(item);\n      },\n    });\n\n    const findIngredient = useCallback<TFindIngredient>(\n      (uniqueID: string) => {\n        const ingredient = ingredients.filter(\n          (item) => item.uniqueID === uniqueID\n        )[0];\n        return {\n          ingredient,\n          index: ingredients.indexOf(ingredient),\n        };\n      },\n      [ingredients]\n    );\n\n    const moveIngredient = useCallback<TMoveIngredient>(\n      (uniqueID: string, atIndex: number | null) => {\n        const { ingredient, index } = findIngredient(uniqueID);\n        dispatch(updateIngredients(ingredient, index, atIndex || 0));\n      },\n      [dispatch, findIngredient]\n    );\n\n    const [{ isHover }, dropTarget] = useDrop({\n      accept: \"burger\",\n      collect: (monitor) => ({\n        isHover: monitor.isOver(),\n      }),\n    });\n\n    const bunIngredient = ingredients.find((item) => item.type === \"bun\");\n\n    const borderColorConstructor = isHoverConstructor\n      ? \"lightgreen\"\n      : \"transparent\";\n    const borderColor = isHover ? \"lightgreen\" : \"transparent\";\n\n    return (\n      <section\n        ref={dropInConstructor}\n        className={IngredientsStyles.ingredients}\n        style={{ borderColor: borderColorConstructor }}\n      >\n        {bunIngredient && (\n          <BurgerConstructorBun {...constructBurgerBun(bunIngredient, \"top\")} />\n        )}\n\n        <div\n          ref={dropTarget}\n          className={IngredientsStyles.ingredientsMiddle}\n          style={{ borderColor }}\n        >\n          {ingredients.length > 0 && (\n            <div className={IngredientsStyles.middle}>\n              {constructBurger(ingredients).map((ingredient, index) => (\n                <BurgerConstructorItem\n                  key={ingredient._id + index}\n                  findIngredient={findIngredient}\n                  moveIngredient={moveIngredient}\n                  ingredient={ingredient}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n\n        {bunIngredient && (\n          <BurgerConstructorBun\n            {...constructBurgerBun(bunIngredient, \"bottom\")}\n          />\n        )}\n\n        {ingredients.length > 0 && (\n          <div className={IngredientsStyles.bottom}>\n            <TotalPrice />\n            <div className=\"ml-2 mr-10 mt-1\">\n              <CurrencyIcon type=\"primary\" />\n            </div>\n            <OrderButton />\n          </div>\n        )}\n      </section>\n    );\n  }\n);\n","import React, { FC, useEffect } from \"react\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { useHistory } from \"react-router-dom\";\nimport { DndProvider } from \"react-dnd\";\nimport { useAlert } from \"react-alert\";\nimport { addIngredient, increaseCount } from \"../../services/actions\";\nimport { BurgerIngredients } from \"../../components/burger-ingredients/burger-ingredients\";\nimport { BurgerConstructor } from \"../../components/burger-constructor/burger-constructor\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\nimport { IBurgerIngredient, IBurgerIngredientID } from \"../../services/models\";\n\nexport const BurgerProviderPage: FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { ingredients, selectedIngredients } = useSelector(\n    ({ burger }) => burger\n  );\n\n  const alert = useAlert();\n\n  useEffect(() => {\n    if (history.action === \"POP\") {\n      history.push(history.location.pathname);\n    }\n  }, [history]);\n\n  const handleDrop = (draggedItem: IBurgerIngredientID) => {\n    const ingredient = ingredients\n      .filter((item: IBurgerIngredient) => item._id === draggedItem.id)\n      .reduce<IBurgerIngredient>((acc, curr) => curr, {} as IBurgerIngredient);\n\n    if (!selectedIngredients.length && ingredient.type !== \"bun\") {\n      alert.show(\"Сначала надо выбрать булку\");\n      return false;\n    }\n\n    dispatch(addIngredient(ingredient));\n    dispatch(increaseCount(ingredient));\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <BurgerIngredients />\n      <BurgerConstructor onDropHandler={handleDrop} />\n    </DndProvider>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { authActions } from \"../../services/actions\";\nimport ProfileTabsStyles from \"./profile-tabs.module.css\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\n\ninterface ITab {\n  title: string;\n  path: string;\n}\n\nconst tabs: ITab[] = [\n  { title: \"Профиль\", path: \"/profile\" },\n  { title: \"История заказов\", path: \"/profile/orders\" },\n  { title: \"Выход\", path: \"/logout\" },\n];\n\nexport const ProfileTabs = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { location } = history;\n  const [current, setCurrent] = useState<string>(\"/profile\");\n  const { refreshToken } = useSelector(({ auth }) => auth);\n\n  useEffect(() => {\n    setCurrent(location.pathname);\n  }, [location.pathname]);\n\n  const onTabClick = (tab: ITab) => {\n    if (tab.path === \"/logout\") {\n      dispatch(authActions.logout(refreshToken));\n      history.push(\"/login\");\n      return;\n    }\n\n    setCurrent(tab.path);\n    history.push(tab.path);\n  };\n\n  return (\n    <div className={ProfileTabsStyles.tabs}>\n      {tabs.map((tab) => (\n        <Tab\n          key={tab.path}\n          value={tab.path}\n          active={current === tab.path}\n          onClick={() => onTabClick(tab)}\n        >\n          {tab.title}\n        </Tab>\n      ))}\n    </div>\n  );\n};\n","export const generateKey = (key: string, milliseconds = 0) =>\n  `${key}_${new Date().getTime() + milliseconds}`;\n","import { generateKey } from \"../utils/generateUniqueKey\";\nimport { IBurgerIngredient } from \"./models\";\n\nexport const addIngredient = (\n  ingredient: IBurgerIngredient,\n  ingredients: IBurgerIngredient[]\n) => {\n  const newIngredient = [\n    {\n      ...ingredient,\n      uniqueID: generateKey(ingredient._id),\n    },\n  ];\n  let newIngredients = [...ingredients];\n\n  if (ingredient.type === \"bun\") {\n    // При добавлении булки в бургер, она сразу добавляется и в верх, и в низ бургера.\n    newIngredient.push({\n      ...ingredient,\n      uniqueID: generateKey(ingredient._id, 100),\n    });\n\n    // При добавлении другой булки в бургер, она заменяет существующую булку, если таковая есть,\n    // при этом сразу и верх, и низ бургера, то есть в бургере может быть всего 2 булки, вверху и внизу.\n    newIngredients = ingredients.filter((item) => item.type !== \"bun\");\n  }\n\n  // Новые ингредиенты добавляются в начало массива\n  return newIngredient.concat(newIngredients);\n};\n\nexport const removeIngredient = (\n  ingredient: IBurgerIngredient,\n  ingredients: IBurgerIngredient[]\n) => {\n  return ingredients.filter((item) => item.uniqueID !== ingredient.uniqueID);\n};\n\nexport const increaseCount = (\n  ingredient: IBurgerIngredient,\n  ingredients: IBurgerIngredient[]\n) => {\n  return ingredients.map((item) => {\n    let counter = 1;\n\n    // При добавлении булки в бургер, она сразу добавляется и в верх, и в низ бургера.\n    if (ingredient.type === \"bun\") {\n      counter = 2;\n      delete item.count;\n    }\n\n    if (item._id === ingredient._id) {\n      if (!item.count) {\n        item.count = counter;\n      } else {\n        item.count += counter;\n      }\n    }\n\n    return item;\n  });\n};\n\nexport const decreaseCount = (\n  ingredient: IBurgerIngredient,\n  ingredients: IBurgerIngredient[]\n) => {\n  return ingredients.map((item) => {\n    const counter = 1;\n\n    if (item._id === ingredient._id) {\n      if (item.count === counter) {\n        delete item.count;\n      } else if (item.count && item.count > counter) {\n        item.count -= counter;\n      }\n    }\n\n    return item;\n  });\n};\n\nexport const removeEmptyParams = (params: any) => {\n  const newParams = { ...params };\n\n  for (const key in newParams) {\n    if (!newParams[key]) {\n      delete newParams[key];\n    }\n  }\n\n  return newParams;\n};\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Button,\n  EmailInput,\n  Input,\n  PasswordInput,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { ProfileTabs } from \"../../components/profile-tabs/profile-tabs\";\nimport { profileActions } from \"../../services/actions\";\nimport { removeEmptyParams } from \"../../services/helpers\";\nimport ProfileStyles from \"./profile.module.css\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\n\ntype TInitialValues = {\n  name: string;\n  email: string;\n  password: string;\n};\n\ntype TInitialInputErrors = {\n  name: boolean;\n};\n\nconst initialValues: TInitialValues = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n};\n\nconst initialInputErrors: TInitialInputErrors = {\n  name: false,\n};\n\nexport const ProfilePage = () => {\n  const dispatch = useDispatch();\n  const [values, setValues] = useState<TInitialValues>(initialValues);\n  const [inputErrors, setInputErrors] =\n    useState<TInitialInputErrors>(initialInputErrors);\n  const { user } = useSelector(({ profile }) => profile);\n  const alert = useAlert();\n\n  useEffect(() => {\n    dispatch(profileActions.getUser());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setValues((prevValues) => ({\n      ...prevValues,\n      ...user,\n    }));\n  }, [user]);\n\n  const onChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = target;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n\n    setInputErrors({\n      ...inputErrors,\n      [name]: false,\n    });\n  };\n\n  const handleSubmit = (e: ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    dispatch(profileActions.updateUser(removeEmptyParams(values)));\n\n    setValues((prevValues) => ({\n      ...prevValues,\n      password: \"\",\n    }));\n    alert.show(\"Пользователь успешно изменен\");\n  };\n\n  const handleReset = () => {\n    setValues({\n      ...user,\n      password: \"\",\n    });\n  };\n\n  return (\n    <div className={ProfileStyles.profile}>\n      <ProfileTabs />\n\n      <form onSubmit={handleSubmit} className={ProfileStyles.form}>\n        <Input\n          type={\"text\"}\n          placeholder={\"Имя\"}\n          onChange={onChange}\n          value={values.name}\n          name={\"name\"}\n          size={\"default\"}\n          error={inputErrors.name}\n          errorText={\"Имя обязательное поле\"}\n        />\n        <div className=\"mb-4\" />\n        <EmailInput onChange={onChange} value={values.email} name={\"email\"} />\n        <div className=\"mb-4\" />\n        <PasswordInput\n          onChange={onChange}\n          value={values.password}\n          name={\"password\"}\n        />\n        <div className=\"mb-6\" />\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <Button type=\"primary\" size=\"medium\">\n            Сохранить\n          </Button>\n          <div className=\"mr-4\" />\n          <Button type=\"primary\" size=\"medium\" onClick={handleReset}>\n            Отмена\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","interface IStatusTypes {\n  [key: string]: string;\n}\n\nexport const STATUS_TYPES: IStatusTypes = {\n  done: \"Выполнен\",\n  pending: \"Готовится\",\n  created: \"Создан\",\n};\n","import React, { FC, Fragment } from \"react\";\nimport { format } from \"date-fns\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport FeedDetailsStyles from \"./feed-details.module.css\";\nimport { STATUS_TYPES } from \"../_constants/status-types\";\nimport { IBurgerIngredient } from \"../../services/models\";\nimport { IOrderStatusList } from \"../order-status-list/order-status-list\";\n\ninterface IFeedDetails {\n  orderId: string;\n  ingredients: IBurgerIngredient[];\n  ordersAll: IOrderStatusList;\n}\n\nexport const FeedDetails: FC<IFeedDetails> = ({\n  orderId,\n  ingredients,\n  ordersAll,\n}) => {\n  const { orders } = ordersAll;\n  const currentOrder = orders.filter(\n    (item) => Number(item.number) === Number(orderId)\n  );\n  const [order] = currentOrder;\n\n  if (!order) {\n    return null;\n  }\n\n  const amountCount: Record<string, number> = order.ingredients.reduce(\n    (acc: Record<string, number>, cur: string) => {\n      if (!acc[cur]) {\n        acc[cur] = 1;\n      } else {\n        acc[cur] += 1;\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  const orderIngredients = ingredients\n    .filter((item) => order.ingredients.includes(item._id))\n    .map((item: IBurgerIngredient & { amount?: number }) => {\n      item.amount = amountCount[item._id];\n\n      return item;\n    });\n\n  const totalPrice = orderIngredients\n    .filter((item) => order.ingredients.includes(item._id))\n    .reduce((total, cur) => total + cur.price * (cur.amount || 1), 0);\n\n  return (\n    <div className={FeedDetailsStyles.feedDetails}>\n      <div\n        className=\"text text_type_digits-default\"\n        style={{ textAlign: \"center\" }}\n      >\n        #{orderId}\n      </div>\n      <div className=\"mb-10\" />\n      <div className=\"text text_type_main-medium\">{order.name}</div>\n      <div className=\"mb-3\" />\n      <div className=\"text text_type_digits-small\" style={{ color: \"#00CCCC\" }}>\n        {STATUS_TYPES[order.status]}\n      </div>\n      <div className=\"mb-15\" />\n      <div className=\"text text_type_main-medium\">Состав:</div>\n      <div className=\"mb-6\" />\n      <div className={FeedDetailsStyles.feedOrderList}>\n        {orderIngredients.map((item, index) => (\n          <Fragment key={index}>\n            <div className={FeedDetailsStyles.feedOrder}>\n              <div>\n                <img\n                  src={`/ingredient-preview/${item._id}.png`}\n                  alt=\"Ingredient\"\n                />\n              </div>\n              <div className=\"mr-4\" />\n              <div\n                className=\"text text_type_main-default\"\n                style={{ maxWidth: 350 }}\n              >\n                {item.name}\n              </div>\n              <div className=\"mr-4\" />\n              <div className={FeedDetailsStyles.price}>\n                <div className=\"text text_type_digits-default mr-2\">\n                  {item.amount} x {item.price}\n                </div>\n                <div className={FeedDetailsStyles.currencyIcon}>\n                  <CurrencyIcon type=\"primary\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"mb-4\" />\n          </Fragment>\n        ))}\n      </div>\n      <div className=\"mb-10\" />\n      <div className={FeedDetailsStyles.bottom}>\n        <div className=\"text text_type_main-default text_color_inactive\">\n          {format(new Date(order.createdAt), \"dd.MM.yyyy HH:mm:ss\")}\n        </div>\n        <div className={FeedDetailsStyles.price}>\n          <div className=\"text text_type_digits-default mr-2\">{totalPrice}</div>\n          <div className={FeedDetailsStyles.currencyIcon}>\n            <CurrencyIcon type=\"primary\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport FeedCardStyles from \"./feed-card.module.css\";\n\nconst START_INDEX = 10;\nconst MORE_THAN = 4;\n\ninterface IFeedCard {\n  ingredient: string;\n  ingredientsCount: number;\n  index: number;\n}\n\nexport const FeedCard: FC<IFeedCard> = ({\n  ingredient,\n  ingredientsCount,\n  index,\n}) => {\n  if (index + 1 > MORE_THAN) {\n    return null;\n  }\n\n  const showMore = ingredientsCount - MORE_THAN;\n\n  return (\n    <div\n      className={FeedCardStyles.cardIngredient}\n      style={{ zIndex: START_INDEX - index }}\n    >\n      {ingredientsCount > MORE_THAN && index + 1 === MORE_THAN && (\n        <div className={FeedCardStyles.hasMore}>\n          {showMore > 0 && (\n            <div className=\"text text_type_digits-default\">\n              +{ingredientsCount - MORE_THAN}\n            </div>\n          )}\n        </div>\n      )}\n      <img src={`/ingredient-preview/${ingredient}.png`} alt=\"Ingredient\" />\n    </div>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { STATUS_TYPES } from \"../_constants/status-types\";\nimport { FeedCard } from \"../feed-card/feed-card\";\nimport CardStyles from \"./card.module.css\";\nimport { ICard } from \"../../services/models/card.model\";\nimport { IBurgerIngredient } from \"../../services/models\";\n\nexport const Card: FC<ICard> = ({ order, ingredients, cardClickHandler }) => {\n  const { location } = useHistory();\n  const [showOrderStatus, setShowOrderStatus] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (location.pathname === \"/profile/orders\") {\n      setShowOrderStatus(true);\n    }\n  }, [location.pathname]);\n\n  const amountCount: Record<string, number> = order.ingredients.reduce(\n    (acc: Record<string, number>, cur: string) => {\n      if (!acc[cur]) {\n        acc[cur] = 1;\n      } else {\n        acc[cur] += 1;\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  const orderIngredients = ingredients\n    .filter((item) => order.ingredients.includes(item._id))\n    .map((item: IBurgerIngredient & { amount?: number }) => {\n      item.amount = amountCount[item._id];\n\n      return item;\n    });\n\n  const totalPrice = orderIngredients\n    .filter((item) => order.ingredients.includes(item._id))\n    .reduce((total, cur) => total + cur.price * (cur.amount || 1), 0);\n\n  return (\n    <div className={CardStyles.cards} onClick={() => cardClickHandler(order)}>\n      <div className={CardStyles.card}>\n        <div className={CardStyles.cardHeader}>\n          <div className=\"text text_type_digits-default\">#{order.number}</div>\n          <div className=\"text text_type_main-default text_color_inactive\">\n            {format(new Date(order.createdAt), \"dd.MM.yyyy HH:mm:ss\")}\n          </div>\n        </div>\n        <div className=\"mb-6\" />\n        <div className=\"text text_type_main-medium\">{order.name}</div>\n        {showOrderStatus && (\n          <>\n            <div className=\"mb-2\" />\n            <div\n              className=\"text text_type_digits-small\"\n              style={{ color: \"#00CCCC\" }}\n            >\n              {STATUS_TYPES[order.status]}\n            </div>\n          </>\n        )}\n        <div className=\"mb-6\" />\n        <div className={CardStyles.cardInfo}>\n          <div className={CardStyles.cardIngredients}>\n            {order.ingredients.map((ingredient, index) => (\n              <FeedCard\n                key={index}\n                ingredient={ingredient}\n                ingredientsCount={order.ingredients.length}\n                index={index}\n              />\n            ))}\n          </div>\n          <div className={CardStyles.price}>\n            <div className=\"text text_type_digits-default mr-2\">\n              {totalPrice}\n            </div>\n            <div className={CardStyles.currencyIcon}>\n              <CurrencyIcon type=\"primary\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport CardListStyles from \"./card-list.module.css\";\nimport { Card } from \"../card/card\";\nimport { ICardList } from \"../../services/models/card.model\";\nimport { IOrder } from \"../../services/actions\";\n\nexport const CardList: FC<ICardList> = ({\n  cardClickHandler,\n  ingredients,\n  ...props\n}) => {\n  const { orders } = props;\n\n  if (!orders) {\n    return null;\n  }\n\n  if (!orders.length) {\n    return (\n      <div className={CardListStyles.cardsWrapper}>\n        <p>У вас еще нет заказов.</p>\n        <p>Сделайте ваш первый заказ :)</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={CardListStyles.cardsWrapper}>\n      {orders.map((order: IOrder) => (\n        <Card\n          key={order.number}\n          order={order}\n          ingredients={ingredients}\n          cardClickHandler={cardClickHandler}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ProfileTabs } from \"../../components/profile-tabs/profile-tabs\";\nimport { FeedDetails } from \"../../components/feed-details/feed-details\";\nimport ProfileOrdersStyles from \"./profile-orders.module.css\";\nimport { CardList } from \"../../components/card-list/card-list\";\nimport { Modal } from \"../../components/modal/modal\";\nimport { useSelector } from \"../../services/hooks\";\nimport { IOrder } from \"../../services/actions\";\nimport { TWsUserState } from \"../../services/reducers/ws-user-reducer\";\n\nexport const ProfileOrders = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [visible, setVisible] = useState<boolean>(false);\n  const [orderId, setOrderId] = useState<string>(\"\");\n  const ingredients = useSelector(({ burger }) => burger.ingredients);\n  const { userOrders } = useSelector<TWsUserState>(\n    ({ wsUserReducer }) => wsUserReducer\n  );\n  const [ordersAll] = userOrders;\n\n  useEffect(() => {\n    if (history.action === \"POP\") {\n      history.push(history.location.pathname);\n    }\n  }, [history]);\n\n  if (!ordersAll) {\n    return null;\n  }\n\n  const cardClickHandler = (order: IOrder) => {\n    setVisible(true);\n    setOrderId(String(order.number));\n\n    history.push({\n      pathname: `/profile/orders/${order.number}`,\n      state: { background: location },\n    });\n  };\n\n  const onModalClose = () => {\n    setVisible(false);\n\n    history.push({\n      pathname: \"/profile/orders\",\n    });\n  };\n\n  return (\n    <>\n      <div className={ProfileOrdersStyles.profileOrders}>\n        <ProfileTabs />\n\n        <CardList\n          {...ordersAll}\n          ingredients={ingredients}\n          cardClickHandler={cardClickHandler}\n        />\n      </div>\n\n      {visible && (\n        <Modal header=\"Детали заказа\" onClose={onModalClose}>\n          <FeedDetails\n            orderId={orderId}\n            ingredients={ingredients}\n            ordersAll={ordersAll}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FeedDetails } from \"../../components/feed-details/feed-details\";\nimport ProfileOrderStyles from \"./profile-order.module.css\";\nimport { useSelector } from \"../../services/hooks\";\n\ninterface IProfileOrderParams {\n  orderId: string;\n}\n\nexport const ProfileOrder = () => {\n  const { orderId } = useParams<IProfileOrderParams>();\n\n  const { ingredients } = useSelector(({ burger }) => burger);\n  const orders = useSelector(({ wsReducer }) => wsReducer.orders);\n  const [ordersAll] = orders;\n\n  if (!ordersAll) {\n    return null;\n  }\n\n  return (\n    <div className={ProfileOrderStyles.order}>\n      <FeedDetails\n        orderId={orderId}\n        ingredients={ingredients}\n        ordersAll={ordersAll}\n      />\n    </div>\n  );\n};\n","import React, { ChangeEvent, useState } from \"react\";\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\nimport {\n  Button,\n  EmailInput,\n  PasswordInput,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { authActions } from \"../../services/actions\";\nimport LoginStyles from \"./login.module.css\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\n\ninterface ILoginLocation {\n  from: {\n    key: string;\n    pathname: string;\n    search: string;\n    hash: string;\n    state: unknown;\n  };\n}\n\ntype TInitialValues = {\n  email: string;\n  password: string;\n};\n\nconst initialValues: TInitialValues = {\n  email: \"\",\n  password: \"\",\n};\n\nexport const LoginPage = () => {\n  const dispatch = useDispatch();\n  const [values, setValues] = useState<TInitialValues>(initialValues);\n  const location = useLocation<ILoginLocation>();\n  const { isAuthorized, error } = useSelector(({ auth }) => auth);\n\n  if (isAuthorized) {\n    return (\n      <Redirect\n        to={{\n          pathname: location.state?.from?.pathname || \"/\",\n        }}\n      />\n    );\n  }\n\n  const onChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = target;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleLogin = (e: ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (\n      !values.email ||\n      !values.email.trim() ||\n      !values.password ||\n      !values.password.trim()\n    ) {\n      return;\n    }\n\n    dispatch(authActions.login(values));\n  };\n\n  const flexRow = `${LoginStyles.flexRow} text text_type_main-default text_color_inactive`;\n  const errorDiv = `${LoginStyles.error} mt-6 mb-8`;\n\n  return (\n    <form onSubmit={handleLogin} className={LoginStyles.login}>\n      <div className=\"text text_type_main-medium\">Вход</div>\n      <div className=\"mb-4\" />\n      <EmailInput onChange={onChange} value={values.email} name={\"email\"} />\n      <div className=\"mb-4\" />\n      <PasswordInput\n        onChange={onChange}\n        value={values.password}\n        name={\"password\"}\n      />\n      <div className=\"mb-6\" />\n      <Button type=\"primary\" size=\"medium\">\n        Войти\n      </Button>\n      {error && <div className={errorDiv}>{error}</div>}\n      {!error && <div className=\"mb-20\" />}\n      <div className={flexRow}>\n        <div className=\"mr-1\">Вы - новый пользователь?</div>\n\n        <div>\n          <Link to=\"/register\" className={LoginStyles.link}>\n            Зарегистрироваться\n          </Link>\n        </div>\n      </div>\n      <div className=\"mb-4\" />\n      <div className={flexRow}>\n        <div className=\"mr-1\">Забыли пароль?</div>\n\n        <div>\n          <Link to=\"/forgot-password\" className={LoginStyles.link}>\n            Восстановить пароль\n          </Link>\n        </div>\n      </div>\n    </form>\n  );\n};\n","export const validateFields = (\n  fields: any,\n  values: any,\n  setInputErrors: any\n): boolean => {\n  let isValid = true;\n\n  fields.forEach((name: string) => {\n    if (!values[name] || values[name].trim() === \"\") {\n      isValid = false;\n\n      setInputErrors((prevValues: any) => ({\n        ...prevValues,\n        [name]: true,\n      }));\n    }\n  });\n\n  return isValid;\n};\n","import React, { ChangeEvent, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  EmailInput,\n  Input,\n  PasswordInput,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { validateFields } from \"../../services/validate/validate\";\nimport RegisterStyles from \"./register.module.css\";\nimport { authActions } from \"../../services/actions\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\n\ntype TInitialValues = {\n  name: string;\n  email: string;\n  password: string;\n};\n\nconst initialValues: TInitialValues = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n};\n\ntype TInitialInputErrors = {\n  name: boolean;\n  email: boolean;\n  password: boolean;\n};\n\nconst initialInputErrors: TInitialInputErrors = {\n  name: false,\n  email: false,\n  password: false,\n};\n\nconst fields = [\"name\", \"email\", \"password\"];\n\nexport const RegisterPage = () => {\n  const dispatch = useDispatch();\n  const [values, setValues] = useState<TInitialValues>(initialValues);\n  const [inputErrors, setInputErrors] =\n    useState<TInitialInputErrors>(initialInputErrors);\n  const { error } = useSelector(({ auth }) => auth);\n  const refreshToken = localStorage.getItem(\"refreshToken\");\n\n  const onChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = target;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n\n    setInputErrors({\n      ...inputErrors,\n      [name]: false,\n    });\n  };\n\n  const handleRegister = (e: ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!validateFields(fields, values, setInputErrors)) {\n      return;\n    }\n\n    dispatch(authActions.register(values));\n  };\n\n  if (refreshToken) {\n    return <Redirect to={{ pathname: \"/\" }} />;\n  }\n\n  const flexRow = `${RegisterStyles.flexRow} text text_type_main-default text_color_inactive`;\n  const errorDiv = `${RegisterStyles.error} mt-6 mb-8`;\n\n  return (\n    <div className={RegisterStyles.register}>\n      <form onSubmit={handleRegister}>\n        <div className=\"text text_type_main-medium\">Регистрация</div>\n        <div className=\"mb-4\" />\n        <Input\n          type={\"text\"}\n          placeholder={\"Имя\"}\n          onChange={onChange}\n          value={values.name}\n          name={\"name\"}\n          size={\"default\"}\n          error={inputErrors.name}\n          errorText={\"Имя обязательное поле\"}\n        />\n        <div className=\"mb-4\" />\n        <EmailInput onChange={onChange} value={values.email} name={\"email\"} />\n        <div className=\"mb-4\" />\n        <PasswordInput\n          onChange={onChange}\n          value={values.password}\n          name={\"password\"}\n        />\n        <div className=\"mb-6\" />\n        <Button type=\"primary\" size=\"medium\">\n          Зарегистрироваться\n        </Button>\n        {error && <div className={errorDiv}>{error}</div>}\n        {!error && <div className=\"mb-20\" />}\n        <div className={flexRow}>\n          <div className=\"mr-1\">Уже зарегистрированы?</div>\n\n          <div>\n            <Link to=\"/login\" className={RegisterStyles.link}>\n              Войти\n            </Link>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  EmailInput,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport ForgotPasswordStyles from \"./forgot-password.module.css\";\nimport { authActions } from \"../../services/actions\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\n\ninterface IForgotPasswordValues {\n  email: string;\n}\n\nexport const ForgotPasswordPage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [values, setValues] = useState<IForgotPasswordValues>({ email: \"\" });\n  const { emailReset, error } = useSelector(({ auth }) => auth);\n  const refreshToken = localStorage.getItem(\"refreshToken\");\n\n  useEffect(() => {\n    if (emailReset) {\n      history.replace(\"/reset-password\");\n    }\n  }, [history, emailReset]);\n\n  const onChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setValues({ email: target.value });\n  };\n\n  const handleSubmit = (e: ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!values.email || !values.email.trim()) {\n      return;\n    }\n\n    dispatch(authActions.forgotPassword(values.email));\n  };\n\n  if (refreshToken) {\n    return <Redirect to={{ pathname: \"/\" }} />;\n  }\n\n  const flexRow = `${ForgotPasswordStyles.flexRow} text text_type_main-default text_color_inactive`;\n  const errorDiv = `${ForgotPasswordStyles.error} mt-6 mb-4`;\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={ForgotPasswordStyles.forgotPassword}\n    >\n      <div className=\"text text_type_main-medium\">Восстановление пароля</div>\n      <div className=\"mb-4\" />\n      <EmailInput onChange={onChange} value={values.email} name={\"email\"} />\n      <div className=\"mb-6\" />\n      <Button type=\"primary\" size=\"medium\">\n        Восстановить\n      </Button>\n      {error && <div className={errorDiv}>{error}</div>}\n      {!error && <div className=\"mb-20\" />}\n      <div className={flexRow}>\n        <div className=\"mr-1\">Вспомнили пароль?</div>\n\n        <div>\n          <Link to=\"/login\" className={ForgotPasswordStyles.link}>\n            Войти\n          </Link>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { ChangeEvent, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  Input,\n  PasswordInput,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { validateFields } from \"../../services/validate/validate\";\nimport ResetPasswordStyles from \"./reset-password.module.css\";\nimport { authActions } from \"../../services/actions\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\n\ntype TInitialValues = {\n  password: string;\n  code: string;\n};\n\nconst initialValues: TInitialValues = {\n  password: \"\",\n  code: \"\",\n};\n\ntype TInitialInputErrors = {\n  code: boolean;\n};\n\nconst initialInputErrors: TInitialInputErrors = {\n  code: false,\n};\n\nconst fields = [\"code\"];\n\nexport const ResetPasswordPage = () => {\n  const dispatch = useDispatch();\n  const [values, setValues] = useState<TInitialValues>(initialValues);\n  const [inputErrors, setInputErrors] =\n    useState<TInitialInputErrors>(initialInputErrors);\n  const { isAuthorized, emailReset, error } = useSelector(({ auth }) => auth);\n\n  const onChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = target;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n\n    setInputErrors({\n      ...inputErrors,\n      [name]: false,\n    });\n  };\n\n  const handleSubmit = (e: ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!validateFields(fields, values, setInputErrors)) {\n      return;\n    }\n\n    dispatch(authActions.resetPassword(values));\n    dispatch(authActions.setEmailReset(false));\n  };\n\n  if (isAuthorized) {\n    return <Redirect to={{ pathname: \"/\" }} />;\n  }\n\n  if (!emailReset) {\n    return <Redirect to={{ pathname: \"/forgot-password\" }} />;\n  }\n\n  const flexRow = `${ResetPasswordStyles.flexRow} text text_type_main-default text_color_inactive`;\n  const errorDiv = `${ResetPasswordStyles.error} mt-6 mb-8`;\n\n  return (\n    <form onSubmit={handleSubmit} className={ResetPasswordStyles.resetPassword}>\n      <div className=\"text text_type_main-medium\">Восстановление пароля</div>\n      <div className=\"mb-4\" />\n      <PasswordInput\n        onChange={onChange}\n        value={values.password}\n        name={\"password\"}\n      />\n      <div className=\"mb-4\" />\n      <Input\n        type={\"text\"}\n        placeholder={\"Введите код из письма\"}\n        onChange={onChange}\n        value={values.code}\n        name={\"code\"}\n        size={\"default\"}\n        error={inputErrors.code}\n        errorText={\"Код обязательное поле\"}\n      />\n      <div className=\"mb-6\" />\n      <Button type=\"primary\" size=\"medium\">\n        Сохранить\n      </Button>\n      {error && <div className={errorDiv}>{error}</div>}\n      {!error && <div className=\"mb-20\" />}\n      <div className={flexRow}>\n        <div className=\"mr-1\">Вспомнили пароль?</div>\n\n        <div>\n          <Link to=\"/login\" className={ResetPasswordStyles.link}>\n            Войти\n          </Link>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { FC } from \"react\";\nimport { numberWithSpaces } from \"../../utils/number-with-spaces\";\nimport PerformedOrdersStyles from \"./performed-orders.module.css\";\n\ninterface IPerformedOrders {\n  text: string;\n  amount: number;\n}\n\nexport const PerformedOrders: FC<IPerformedOrders> = ({ text, amount }) => {\n  return (\n    <div>\n      <div className=\"text text_type_main-medium\">{text}:</div>\n      <div className=\"text text_type_digits-large\">\n        <span className={PerformedOrdersStyles.textShadow}>\n          {numberWithSpaces(amount)}\n        </span>\n      </div>\n    </div>\n  );\n};\n","export const numberWithSpaces = (num: number) => {\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n};\n","import React, { FC, Fragment } from \"react\";\nimport { PerformedOrders } from \"../performed-orders/performed-orders\";\nimport OrderStatusListStyles from \"./order-status-list.module.css\";\nimport { IOrder, IPendingOrder, IReadyOrder } from \"../../services/actions\";\n\nconst LIMIT_ORDERS = 10;\n\nexport interface IOrderStatusList {\n  total: number;\n  totalToday: number;\n  orders: IOrder[];\n  timestamp: number;\n}\n\nexport const OrderStatusList: FC<IOrderStatusList> = ({\n  total,\n  totalToday,\n  orders,\n}) => {\n  const readyOrders: IReadyOrder[] = orders\n    .filter(\n      (item, index: number) => item.status === \"done\" && index < LIMIT_ORDERS\n    )\n    .map((item) => ({\n      _id: item._id,\n      number: item.number,\n    }));\n\n  const pendingOrders: IPendingOrder[] = orders\n    .filter(\n      (item, index: number) => item.status === \"pending\" && index < LIMIT_ORDERS\n    )\n    .map((item) => ({\n      _id: item._id,\n      number: item.number,\n    }));\n\n  return (\n    <div className={OrderStatusListStyles.ordersStatusList}>\n      <div className={OrderStatusListStyles.ordersReadyAndInProgress}>\n        <div className={OrderStatusListStyles.ordersReady}>\n          <div className=\"text text_type_main-medium\">Готовы:</div>\n          <div className=\"mb-6\" />\n          {readyOrders.map((order) => (\n            <Fragment key={order._id}>\n              <div\n                className=\"text text_type_digits-default\"\n                style={{ color: \"#00CCCC\" }}\n              >\n                {order.number}\n              </div>\n              <div className=\"mb-2\" />\n            </Fragment>\n          ))}\n        </div>\n        <div>\n          <div className=\"text text_type_main-medium\">В работе:</div>\n          <div className=\"mb-6\" />\n          {pendingOrders.map((order) => (\n            <Fragment key={order._id}>\n              <div className=\"text text_type_digits-default\">\n                {order.number}\n              </div>\n              <div className=\"mb-2\" />\n            </Fragment>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"mb-15\" />\n\n      <PerformedOrders text=\"Выполнено за все время\" amount={total} />\n\n      <div className=\"mb-15\" />\n\n      <PerformedOrders text=\"Выполнено за сегодня\" amount={totalToday} />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { OrderStatusList } from \"../../components/order-status-list/order-status-list\";\nimport { FeedDetails } from \"../../components/feed-details/feed-details\";\nimport { CardList } from \"../../components/card-list/card-list\";\nimport { Modal } from \"../../components/modal/modal\";\nimport FeedsStyles from \"./feeds.module.css\";\nimport { useSelector } from \"../../services/hooks\";\nimport { IOrder } from \"../../services/actions\";\n\nexport const Feeds = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [visible, setVisible] = useState<boolean>(false);\n  const [orderId, setOrderId] = useState<string>(\"\");\n  const { ingredients } = useSelector(({ burger }) => burger);\n  const orders = useSelector(({ wsReducer }) => wsReducer.orders);\n  const [ordersAll] = orders;\n\n  useEffect(() => {\n    if (history.action === \"POP\") {\n      history.push(history.location.pathname);\n    }\n  }, [history]);\n\n  if (!ordersAll) {\n    return null;\n  }\n\n  const cardClickHandler = (order: IOrder) => {\n    setVisible(true);\n    setOrderId(String(order.number));\n\n    history.push({\n      pathname: `/feed/${order.number}`,\n      state: { background: location },\n    });\n  };\n\n  const onModalClose = () => {\n    setVisible(false);\n    history.push({\n      pathname: \"/feed\",\n    });\n  };\n\n  return (\n    <>\n      <section className={FeedsStyles.feedsWrapper}>\n        <p className=\"text text_type_main-large mb-5\">Лента заказов</p>\n\n        <div className={FeedsStyles.feeds}>\n          <CardList\n            {...ordersAll}\n            ingredients={ingredients}\n            cardClickHandler={cardClickHandler}\n          />\n          <OrderStatusList {...ordersAll} />\n        </div>\n      </section>\n\n      {visible && (\n        <Modal header=\"Детали заказа\" onClose={onModalClose}>\n          <FeedDetails\n            orderId={orderId}\n            ingredients={ingredients}\n            ordersAll={ordersAll}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FeedDetails } from \"../../components/feed-details/feed-details\";\nimport FeedStyles from \"./feed.module.css\";\nimport { useSelector } from \"../../services/hooks\";\n\ninterface FeedParams {\n  orderId: string;\n}\n\nexport const Feed = () => {\n  const { orderId } = useParams<FeedParams>();\n\n  const { ingredients } = useSelector(({ burger }) => burger);\n  const orders = useSelector(({ wsReducer }) => wsReducer.orders);\n\n  if (!orders?.length) {\n    return null;\n  }\n\n  const [ordersAll] = orders;\n\n  if (!ordersAll) {\n    return null;\n  }\n\n  return (\n    <div className={FeedStyles.feed}>\n      <FeedDetails\n        orderId={orderId}\n        ingredients={ingredients}\n        ordersAll={ordersAll}\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { IngredientDetails } from \"../../components/ingredient-details/ingredient-details\";\nimport IngredientStyles from \"./ingredient.module.css\";\nimport { useSelector } from \"../../services/hooks\";\nimport { IBurgerIngredient } from \"../../services/models\";\n\ninterface IngredientParams {\n  ingredientId: string;\n}\n\nexport const Ingredient = () => {\n  const { ingredientId } = useParams<IngredientParams>();\n  const [ingredient, setIngredient] = useState<IBurgerIngredient | null>(null);\n  const ingredients: IBurgerIngredient[] = useSelector(\n    ({ burger }) => burger.ingredients\n  );\n\n  useEffect(() => {\n    if (ingredients.length) {\n      const foundIngredient =\n        ingredients.find((item) => item._id === ingredientId) || null;\n\n      setIngredient(foundIngredient);\n    }\n  }, [ingredients, ingredientId]);\n\n  return (\n    <div className={IngredientStyles.ingredient}>\n      {ingredient && <IngredientDetails {...ingredient} />}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport NoMatchStyles from \"./no-match.module.css\";\n\nexport const NoMatch = () => {\n  const location = useLocation();\n\n  return (\n    <div className={NoMatchStyles.noMatch}>\n      <span className={NoMatchStyles.notFound}>404</span>\n      <span className={NoMatchStyles.path}>\n        Page not found for {location.pathname}\n      </span>\n      <Link to=\"/\" className={NoMatchStyles.path}>\n        Go to main page\n      </Link>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport { AppHeader } from \"../../components/app-header/app-header\";\nimport { ProtectedRoute } from \"./protected-route\";\nimport { Main } from \"../../components/main/main\";\nimport {\n  BurgerProviderPage,\n  Feed,\n  Feeds,\n  ForgotPasswordPage,\n  Ingredient,\n  LoginPage,\n  NoMatch,\n  ProfileOrder,\n  ProfileOrders,\n  ProfilePage,\n  RegisterPage,\n  ResetPasswordPage,\n} from \"../../pages\";\n\ninterface IRoutesLocation {\n  background: {\n    key: string;\n    pathname: string;\n    search: string;\n    hash: string;\n    state: unknown;\n  };\n}\n\nexport const Routes = () => {\n  const location = useLocation<IRoutesLocation>();\n  const background = location.state && location.state.background;\n\n  return (\n    <>\n      <AppHeader />\n      <Main>\n        <Switch location={background || location}>\n          <Route path=\"/login\" exact={true}>\n            <LoginPage />\n          </Route>\n          <Route path=\"/register\" exact={true}>\n            <RegisterPage />\n          </Route>\n          <Route path=\"/forgot-password\" exact={true}>\n            <ForgotPasswordPage />\n          </Route>\n          <Route path=\"/reset-password\" exact={true}>\n            <ResetPasswordPage />\n          </Route>\n          <Route path=\"/ingredients/:ingredientId\">\n            <Ingredient />\n          </Route>\n          <Route path=\"/feed/:orderId\">\n            <Feed />\n          </Route>\n          <Route path=\"/feed\" exact={true}>\n            <Feeds />\n          </Route>\n          <Route path=\"/\" exact={true}>\n            <BurgerProviderPage />\n          </Route>\n          <ProtectedRoute path=\"/profile\" exact={true}>\n            <ProfilePage />\n          </ProtectedRoute>\n          <ProtectedRoute path=\"/profile/orders/:orderId\">\n            <ProfileOrder />\n          </ProtectedRoute>\n          <ProtectedRoute path=\"/profile/orders\" exact={true}>\n            <ProfileOrders />\n          </ProtectedRoute>\n          <Route path=\"*\">\n            <NoMatch />\n          </Route>\n        </Switch>\n      </Main>\n    </>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { useCheckPreviousLogin, useDispatch } from \"../services/hooks\";\nimport {\n  WS_CONNECTION_START,\n  WS_USER_CONNECTION_START,\n} from \"../services/action-types\";\nimport { getIngredients } from \"../services/actions\";\nimport { Routes } from \"../services/routes/routes\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n\n  useCheckPreviousLogin();\n\n  useEffect(() => {\n    dispatch(getIngredients());\n    dispatch({ type: WS_CONNECTION_START });\n    dispatch({ type: WS_USER_CONNECTION_START });\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <Routes />\n    </Router>\n  );\n};\n","import { useEffect } from \"react\";\nimport { authActions } from \"../actions\";\nimport { getCookie } from \"../helpers-cookie\";\nimport { useDispatch, useSelector } from \"./hooks\";\n\nexport const useCheckPreviousLogin = () => {\n  const dispatch = useDispatch();\n  const { isAuthorized } = useSelector(({ auth }) => auth);\n\n  useEffect(() => {\n    const accessToken = getCookie(\"token\") ?? \"\";\n    const refreshToken = localStorage.getItem(\"refreshToken\");\n\n    if (!isAuthorized && refreshToken) {\n      dispatch(authActions.setAuthorization({ accessToken, refreshToken }));\n    }\n  }, [dispatch, isAuthorized]);\n};\n","import {\n  GET_USER_FAILURE,\n  GET_USER_REQUEST,\n  GET_USER_SUCCESS,\n  UPDATE_USER_FAILURE,\n  UPDATE_USER_REQUEST,\n  UPDATE_USER_SUCCESS,\n} from \"../action-types\";\nimport { IUser } from \"../actions\";\n\ntype TProfileReducerInitialState = {\n  error: Error | null;\n  loading: boolean;\n  user: IUser | null;\n};\n\nexport const profileReducerInitialState: TProfileReducerInitialState = {\n  error: null,\n  loading: false,\n  user: null,\n};\n\n/**\n * TODO: Когда последний action типизирую на всех диспатчах появляется ошибка следующего рода\n * Не смог победить проблему\n * action: TProfileActions\n *\n * TS2345: Argument of type '(dispatch: AppDispatch) => Promise<void>' is not assignable to parameter of type\n * 'TProfileActions | TBurgerActions | TAuthActions | TOrderActions | TWsActions | TWsUserActions'.\n * Type '(dispatch: Dispatch<TProfileActions | TBurgerActions | TAuthActions | TOrderActions | TWsActions\n * | TWsUserActions>) => Promise<...>' is missing the following properties from type\n * 'IWsUserSendMessage': type, payload\n */\nexport const profileReducer = (\n  state = profileReducerInitialState,\n  action: any\n) => {\n  switch (action.type) {\n    case GET_USER_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    }\n    case GET_USER_SUCCESS: {\n      return {\n        ...state,\n        user: action.data.user,\n        loading: false,\n        error: null,\n      };\n    }\n    case GET_USER_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    }\n    case UPDATE_USER_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    }\n    case UPDATE_USER_SUCCESS: {\n      return {\n        ...state,\n        user: action.data.user,\n        loading: false,\n        error: null,\n      };\n    }\n    case UPDATE_USER_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import {\n  addIngredient,\n  decreaseCount,\n  increaseCount,\n  removeIngredient,\n} from \"../helpers\";\nimport {\n  ADD_INGREDIENT,\n  INCREASE_COUNT,\n  DECREASE_COUNT,\n  REMOVE_INGREDIENT,\n  UPDATE_INGREDIENTS,\n  GET_INGREDIENTS_REQUEST,\n  GET_INGREDIENTS_SUCCESS,\n  GET_INGREDIENTS_FAILURE,\n  CLEAR_SELECTED_INGREDIENTS,\n} from \"../action-types\";\nimport { IBurgerIngredient } from \"../models\";\nimport { TBurgerActions } from \"../actions\";\n\nexport type TBurgerReducerInitialState = {\n  ingredients: IBurgerIngredient[];\n  ingredientsRequest: boolean;\n  ingredientsFailed: boolean;\n  selectedIngredients: IBurgerIngredient[];\n  selectedIngredient: IBurgerIngredient | {};\n  loading: boolean;\n  error: Error | null;\n};\n\nexport const burgerReducerInitialState: TBurgerReducerInitialState = {\n  ingredients: [],\n  ingredientsRequest: false,\n  ingredientsFailed: false,\n  selectedIngredients: [],\n  selectedIngredient: {},\n  loading: false,\n  error: null,\n};\n\nexport const burgerReducer = (\n  state = burgerReducerInitialState,\n  action: TBurgerActions\n) => {\n  switch (action.type) {\n    case GET_INGREDIENTS_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    }\n    case GET_INGREDIENTS_SUCCESS: {\n      return {\n        ...state,\n        ingredients: action.data,\n        loading: false,\n        error: null,\n      };\n    }\n    case GET_INGREDIENTS_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    }\n    case ADD_INGREDIENT: {\n      return {\n        ...state,\n        selectedIngredients: addIngredient(\n          action.ingredient,\n          state.selectedIngredients\n        ),\n      };\n    }\n    case REMOVE_INGREDIENT: {\n      return {\n        ...state,\n        selectedIngredients: removeIngredient(\n          action.ingredient,\n          state.selectedIngredients\n        ),\n      };\n    }\n    case UPDATE_INGREDIENTS: {\n      const selectedIngredients = [...state.selectedIngredients];\n      selectedIngredients.splice(action.index, 1);\n      selectedIngredients.splice(action.atIndex, 0, action.ingredient);\n\n      return {\n        ...state,\n        selectedIngredients,\n      };\n    }\n    case CLEAR_SELECTED_INGREDIENTS: {\n      const newIngredients = state.ingredients.map((item) => {\n        item.count = 0;\n\n        return item;\n      });\n\n      return {\n        ...state,\n        selectedIngredients: [],\n        ingredients: newIngredients,\n      };\n    }\n    case INCREASE_COUNT: {\n      return {\n        ...state,\n        ingredients: increaseCount(action.ingredient, state.ingredients),\n      };\n    }\n    case DECREASE_COUNT: {\n      return {\n        ...state,\n        ingredients: decreaseCount(action.ingredient, state.ingredients),\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import {\n  CLEAR_AUTHORIZATION,\n  FORGOT_PASSWORD_FAILURE,\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  LOGIN_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGOUT_FAILURE,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  REGISTER_FAILURE,\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  RESET_PASSWORD_FAILURE,\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  SET_AUTHORIZATION,\n  SET_EMAIL_RESET,\n  UPDATE_TOKEN_FAILURE,\n  UPDATE_TOKEN_REQUEST,\n  UPDATE_TOKEN_SUCCESS,\n} from \"../action-types\";\nimport { IUser, TAuthActions } from \"../actions\";\n\ntype TAuthState = {\n  loading: boolean;\n  user: IUser | null;\n  accessToken: string | null;\n  refreshToken: string | null;\n  isAuthorized: boolean;\n  emailReset: boolean;\n  error: Error | null;\n};\n\nexport const authReducerInitialState: TAuthState = {\n  loading: false,\n  user: null,\n  accessToken: null,\n  refreshToken: null,\n  isAuthorized: false,\n  emailReset: false,\n  error: null,\n};\n\nexport const authReducer = (\n  state = authReducerInitialState,\n  action: TAuthActions\n) => {\n  switch (action.type) {\n    case SET_AUTHORIZATION: {\n      return {\n        ...state,\n        isAuthorized: true,\n        accessToken: action.accessToken,\n        refreshToken: action.refreshToken,\n      };\n    }\n    case CLEAR_AUTHORIZATION: {\n      return {\n        ...state,\n        isAuthorized: false,\n        accessToken: null,\n        refreshToken: null,\n      };\n    }\n    case SET_EMAIL_RESET: {\n      return {\n        ...state,\n        emailReset: action.emailReset,\n      };\n    }\n    case LOGIN_REQUEST: {\n      return {\n        ...state,\n        error: null,\n      };\n    }\n    case LOGIN_SUCCESS: {\n      return {\n        ...state,\n        isAuthorized: true,\n        user: action.data.user,\n        accessToken: action.data.accessToken.split(\"Bearer \")[1],\n        refreshToken: action.data.refreshToken,\n      };\n    }\n    case LOGIN_FAILURE: {\n      return {\n        ...state,\n        isAuthorized: false,\n        error: action.error.toString(),\n      };\n    }\n    case LOGOUT_REQUEST: {\n      return {\n        ...state,\n        error: null,\n      };\n    }\n    case LOGOUT_SUCCESS: {\n      return {\n        ...state,\n        user: null,\n        isAuthorized: false,\n        accessToken: null,\n        refreshToken: null,\n      };\n    }\n    case LOGOUT_FAILURE: {\n      return {\n        ...state,\n        error: action.error.toString(),\n      };\n    }\n    case UPDATE_TOKEN_REQUEST: {\n      return {\n        ...state,\n        error: null,\n      };\n    }\n    case UPDATE_TOKEN_SUCCESS: {\n      return {\n        ...state,\n        isAuthorized: true,\n        accessToken: action.data.accessToken.split(\"Bearer \")[1],\n        refreshToken: action.data.refreshToken,\n        error: null,\n      };\n    }\n    case UPDATE_TOKEN_FAILURE: {\n      return {\n        ...state,\n        isAuthorized: false,\n        accessToken: null,\n        refreshToken: null,\n        error: action.error.toString(),\n      };\n    }\n    case REGISTER_REQUEST: {\n      return {\n        ...state,\n        error: null,\n      };\n    }\n    case REGISTER_SUCCESS: {\n      return {\n        ...state,\n        user: action.data.user,\n        isAuthorized: true,\n        accessToken: action.data.accessToken.split(\"Bearer \")[1],\n        refreshToken: action.data.refreshToken,\n      };\n    }\n    case REGISTER_FAILURE: {\n      return {\n        ...state,\n        isAuthorized: false,\n        error: action.error.toString(),\n      };\n    }\n    case FORGOT_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case FORGOT_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        emailReset: true,\n      };\n    }\n    case FORGOT_PASSWORD_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: true,\n      };\n    }\n    case RESET_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case RESET_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n      };\n    }\n    case RESET_PASSWORD_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import {\n  WS_CONNECTION_CLOSED,\n  WS_CONNECTION_ERROR,\n  WS_CONNECTION_SUCCESS,\n  WS_GET_ORDER,\n} from \"../action-types\";\nimport { TWsActions } from \"../actions\";\nimport { IOrderStatusList } from \"../../components/order-status-list/order-status-list\";\n\ntype TWsState = {\n  wsConnected: boolean;\n  orders: IOrderStatusList[];\n};\n\nexport const wsReducerInitialState: TWsState = {\n  wsConnected: false,\n  orders: [],\n};\n\nexport const wsReducer = (\n  state = wsReducerInitialState,\n  action: TWsActions\n) => {\n  switch (action.type) {\n    case WS_CONNECTION_SUCCESS: {\n      return {\n        ...state,\n        wsConnected: true,\n      };\n    }\n    case WS_CONNECTION_ERROR: {\n      return {\n        ...state,\n        wsConnected: false,\n      };\n    }\n    case WS_CONNECTION_CLOSED: {\n      return {\n        ...state,\n        wsConnected: false,\n      };\n    }\n    case WS_GET_ORDER: {\n      return {\n        ...state,\n        orders: state.orders.length\n          ? [\n              ...state.orders,\n              {\n                ...action.payload,\n                timestamp: new Date().getTime() / 1000,\n              },\n            ]\n          : [{ ...action.payload, timestamp: new Date().getTime() / 1000 }],\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  WS_USER_CONNECTION_CLOSED,\n  WS_USER_CONNECTION_ERROR,\n  WS_USER_CONNECTION_SUCCESS,\n  WS_USER_GET_ORDER,\n} from \"../action-types\";\nimport { IOrderStatusList } from \"../../components/order-status-list/order-status-list\";\nimport { TWsUserActions } from \"../actions\";\n\nexport type TWsUserState = {\n  wsUserConnected: boolean;\n  userOrders: IOrderStatusList[];\n};\n\nexport const wsUserReducerInitialState: TWsUserState = {\n  wsUserConnected: false,\n  userOrders: [],\n};\n\nexport const wsUserReducer = (\n  state = wsUserReducerInitialState,\n  action: TWsUserActions\n) => {\n  switch (action.type) {\n    case WS_USER_CONNECTION_SUCCESS: {\n      return {\n        ...state,\n        wsUserConnected: true,\n      };\n    }\n    case WS_USER_CONNECTION_ERROR: {\n      return {\n        ...state,\n        wsUserConnected: false,\n      };\n    }\n    case WS_USER_CONNECTION_CLOSED: {\n      return {\n        ...state,\n        wsUserConnected: false,\n      };\n    }\n    case WS_USER_GET_ORDER: {\n      return {\n        ...state,\n        userOrders: state.userOrders.length\n          ? [\n              ...state.userOrders,\n              { ...action.payload, timestamp: new Date().getTime() / 1000 },\n            ]\n          : [{ ...action.payload, timestamp: new Date().getTime() / 1000 }],\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  CHECKOUT_ORDER_FAILURE,\n  CHECKOUT_ORDER_REQUEST,\n  CHECKOUT_ORDER_SUCCESS,\n} from \"../action-types\";\nimport { IUserOrder, TOrderActions } from \"../actions\";\n\ntype TOrderReducerInitialState = {\n  loading: boolean;\n  error: Error | null;\n  order: IUserOrder | null;\n};\n\nexport const orderReducerInitialState: TOrderReducerInitialState = {\n  loading: false,\n  error: null,\n  order: null,\n};\n\nexport const orderReducer = (\n  state = orderReducerInitialState,\n  action: TOrderActions\n) => {\n  switch (action.type) {\n    case CHECKOUT_ORDER_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    }\n    case CHECKOUT_ORDER_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        order: action.data.order,\n      };\n    }\n    case CHECKOUT_ORDER_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { profileReducer } from \"./profile\";\nimport { burgerReducer } from \"./burger\";\nimport { authReducer } from \"./auth\";\nimport { wsReducer } from \"./ws-reducer\";\nimport { wsUserReducer } from \"./ws-user-reducer\";\nimport { orderReducer } from \"./order\";\n\nexport const rootReducer = combineReducers({\n  burger: burgerReducer,\n  auth: authReducer,\n  profile: profileReducer,\n  orderReducer,\n  wsReducer,\n  wsUserReducer,\n});\n","import { compose, createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { rootReducer } from \"./services/reducers\";\nimport {\n  WS_CONNECTION_CLOSED,\n  WS_CONNECTION_ERROR,\n  WS_CONNECTION_START,\n  WS_CONNECTION_SUCCESS,\n  WS_GET_ORDER,\n  WS_SEND_ORDER,\n  WS_USER_CONNECTION_CLOSED,\n  WS_USER_CONNECTION_ERROR,\n  WS_USER_CONNECTION_START,\n  WS_USER_CONNECTION_SUCCESS,\n  WS_USER_GET_ORDER,\n  WS_USER_SEND_ORDER,\n} from \"./services/action-types\";\nimport { socketMiddleware, socketUserMiddleware } from \"./services/middleware\";\n\nconst wsUrl = \"wss://norma.nomoreparties.space/orders/all\";\n\nconst wsActions = {\n  wsInit: WS_CONNECTION_START,\n  wsSendOrder: WS_SEND_ORDER,\n  onOpen: WS_CONNECTION_SUCCESS,\n  onClose: WS_CONNECTION_CLOSED,\n  onError: WS_CONNECTION_ERROR,\n  onOrder: WS_GET_ORDER,\n};\n\nconst wsUserUrl = \"wss://norma.nomoreparties.space/orders\";\n\nconst wsUserActions = {\n  wsUserInit: WS_USER_CONNECTION_START,\n  wsUserSendOrder: WS_USER_SEND_ORDER,\n  userOnOpen: WS_USER_CONNECTION_SUCCESS,\n  userOnClose: WS_USER_CONNECTION_CLOSED,\n  userOnError: WS_USER_CONNECTION_ERROR,\n  userOnOrder: WS_USER_GET_ORDER,\n};\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(thunkMiddleware),\n  applyMiddleware(socketMiddleware(wsUrl, wsActions)),\n  applyMiddleware(socketUserMiddleware(wsUserUrl, wsUserActions))\n);\n\nexport const initStore = (initialState = {}) =>\n  createStore(rootReducer, initialState, enhancer);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as AlertProvider } from \"react-alert\";\n// @ts-ignore\nimport AlertTemplate from \"react-alert-template-basic\";\nimport { rootReducer } from \"./services/reducers\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { alertOptions } from \"./alert\";\nimport { App } from \"./components/app\";\nimport { initStore } from \"./store\";\nimport \"./index.css\";\n\nconst store = initStore();\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppDispatch = typeof store.dispatch;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AlertProvider template={AlertTemplate} {...alertOptions}>\n        <App />\n      </AlertProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedDetails\":\"feed-details_feedDetails__7ZO_I\",\"feedOrderList\":\"feed-details_feedOrderList__6W2Y4\",\"feedOrder\":\"feed-details_feedOrder__2NLVS\",\"price\":\"feed-details_price__2m7Z4\",\"currencyIcon\":\"feed-details_currencyIcon__24m1h\",\"bottom\":\"feed-details_bottom__2RmSR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"card_cards__2dc2s\",\"card\":\"card_card__1py-W\",\"cardHeader\":\"card_cardHeader__3QlUF\",\"cardInfo\":\"card_cardInfo__X0cv6\",\"cardIngredients\":\"card_cardIngredients__1E4al\",\"price\":\"card_price__1ePjW\",\"currencyIcon\":\"card_currencyIcon__3SnXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__3BYA9\",\"flexRow\":\"login_flexRow__2s35h\",\"link\":\"login_link__2bcVJ\",\"error\":\"login_error__2R0VM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"header-item_menuItem__n7cBj\",\"link\":\"header-item_link__5dJ7M\",\"text\":\"header-item_text__1EUcT\",\"active\":\"header-item_active__3w2YP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients\":\"burger-constructor_ingredients__3srro\",\"ingredientsMiddle\":\"burger-constructor_ingredientsMiddle__2YBUz\",\"middle\":\"burger-constructor_middle__2oDRJ\",\"bottom\":\"burger-constructor_bottom__1l2yp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"register_register__1-FiH\",\"flexRow\":\"register_flexRow__FfD8I\",\"link\":\"register_link__2XLtm\",\"error\":\"register_error__9iRzL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotPassword\":\"forgot-password_forgotPassword__2EIQe\",\"flexRow\":\"forgot-password_flexRow__2D8FM\",\"link\":\"forgot-password_link__1xRFL\",\"error\":\"forgot-password_error__38bMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resetPassword\":\"reset-password_resetPassword__j7gJq\",\"flexRow\":\"reset-password_flexRow__3_TYL\",\"link\":\"reset-password_link__2wk5C\",\"error\":\"reset-password_error__3_maO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noMatch\":\"no-match_noMatch__2vtcG\",\"notFound\":\"no-match_notFound__12QH4\",\"path\":\"no-match_path__1CgfL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"app-header_wrapper__ECTu6\",\"header\":\"app-header_header__1iHLW\",\"logo\":\"app-header_logo__zVEfY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"burger-ingredients-card-item_card__3iZWF\",\"priceCurrency\":\"burger-ingredients-card-item_priceCurrency__9U12E\",\"currencyIcon\":\"burger-ingredients-card-item_currencyIcon__1NUuu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1DF1f\",\"header\":\"modal_header__2iX3r\",\"close\":\"modal_close__1Iez6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"burger-constructor-item_ingredient__bbhJg\",\"ingredientEl\":\"burger-constructor-item_ingredientEl__5HaoO\",\"drag\":\"burger-constructor-item_drag__4gTMq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderAccepted\":\"order-details_orderAccepted__3OIcz\",\"orderId\":\"order-details_orderId__vw7fX\",\"textGrey\":\"order-details_textGrey__1B3ID\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ordersStatusList\":\"order-status-list_ordersStatusList__Mm-pw\",\"ordersReadyAndInProgress\":\"order-status-list_ordersReadyAndInProgress__YpiOY\",\"ordersReady\":\"order-status-list_ordersReady__2gKT3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientDetails\":\"ingredient-details_ingredientDetails__20EW8\",\"helpfulness\":\"ingredient-details_helpfulness__1sUP5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"burger-constructor-bun_ingredient__14QCe\",\"ingredientEl\":\"burger-constructor-bun_ingredientEl__2Cbu-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__26YER\",\"form\":\"profile_form__3yKlC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsWrapper\":\"card-list_cardsWrapper__3yChi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardIngredient\":\"feed-card_cardIngredient__320Tz\",\"hasMore\":\"feed-card_hasMore__souup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedsWrapper\":\"feeds_feedsWrapper__3glnX\",\"feeds\":\"feeds_feeds__3jl-H\"};"],"sourceRoot":""}